/* File generated by the BNF Converter (bnfc 2.9.4.1). */

#ifndef ACSL_PARSER_HEADER_FILE
#define ACSL_PARSER_HEADER_FILE

#include<vector>
#include<string>
#include<cstdio>
#include "Absyn.H"

namespace acsl
{
Program* pProgram(FILE *inp);
Program* pProgram(const char *str);
Globals* pGlobals(FILE *inp);
Globals* pGlobals(const char *str);
GhostGlobals* pGhostGlobals(FILE *inp);
GhostGlobals* pGhostGlobals(const char *str);
Global* pGlobal(FILE *inp);
Global* pGlobal(const char *str);
IdOrTypenameAsId* pIdOrTypenameAsId(FILE *inp);
IdOrTypenameAsId* pIdOrTypenameAsId(const char *str);
IdOrTypename* pIdOrTypename(FILE *inp);
IdOrTypename* pIdOrTypename(const char *str);
MaybeComma* pMaybeComma(FILE *inp);
MaybeComma* pMaybeComma(const char *str);
AssignExpr* pAssignExpr15(FILE *inp);
AssignExpr* pAssignExpr15(const char *str);
AssignExpr* pAssignExpr14(FILE *inp);
AssignExpr* pAssignExpr14(const char *str);
OffsetofMemberDesignator* pOffsetofMemberDesignator(FILE *inp);
OffsetofMemberDesignator* pOffsetofMemberDesignator(const char *str);
AssignExpr* pAssignExpr13(FILE *inp);
AssignExpr* pAssignExpr13(const char *str);
AssignExpr* pAssignExpr12(FILE *inp);
AssignExpr* pAssignExpr12(const char *str);
AssignExpr* pAssignExpr11(FILE *inp);
AssignExpr* pAssignExpr11(const char *str);
AssignExpr* pAssignExpr10(FILE *inp);
AssignExpr* pAssignExpr10(const char *str);
AssignExpr* pAssignExpr9(FILE *inp);
AssignExpr* pAssignExpr9(const char *str);
AssignExpr* pAssignExpr8(FILE *inp);
AssignExpr* pAssignExpr8(const char *str);
AssignExpr* pAssignExpr7(FILE *inp);
AssignExpr* pAssignExpr7(const char *str);
AssignExpr* pAssignExpr6(FILE *inp);
AssignExpr* pAssignExpr6(const char *str);
AssignExpr* pAssignExpr5(FILE *inp);
AssignExpr* pAssignExpr5(const char *str);
AssignExpr* pAssignExpr4(FILE *inp);
AssignExpr* pAssignExpr4(const char *str);
AssignExpr* pAssignExpr3(FILE *inp);
AssignExpr* pAssignExpr3(const char *str);
AssignExpr* pAssignExpr2(FILE *inp);
AssignExpr* pAssignExpr2(const char *str);
AssignExpr* pAssignExpr1(FILE *inp);
AssignExpr* pAssignExpr1(const char *str);
AssignExpr* pAssignExpr(FILE *inp);
AssignExpr* pAssignExpr(const char *str);
Expression* pExpression(FILE *inp);
Expression* pExpression(const char *str);
Constant* pConstant(FILE *inp);
Constant* pConstant(const char *str);
StringConstant* pStringConstant(FILE *inp);
StringConstant* pStringConstant(const char *str);
WStringList* pWStringList(FILE *inp);
WStringList* pWStringList(const char *str);
OneString* pOneString(FILE *inp);
OneString* pOneString(const char *str);
ListOneString* pListOneString(FILE *inp);
ListOneString* pListOneString(const char *str);
InitExpression* pInitExpression(FILE *inp);
InitExpression* pInitExpression(const char *str);
InitializerListOpt* pInitializerListOpt(FILE *inp);
InitializerListOpt* pInitializerListOpt(const char *str);
InitializerSingle* pInitializerSingle(FILE *inp);
InitializerSingle* pInitializerSingle(const char *str);
ListInitializerSingle* pListInitializerSingle(FILE *inp);
ListInitializerSingle* pListInitializerSingle(const char *str);
EqOpt* pEqOpt(FILE *inp);
EqOpt* pEqOpt(const char *str);
InitDesignators* pInitDesignators(FILE *inp);
InitDesignators* pInitDesignators(const char *str);
InitDesignatorsOpt* pInitDesignatorsOpt(FILE *inp);
InitDesignatorsOpt* pInitDesignatorsOpt(const char *str);
GhostArgumentsOpt* pGhostArgumentsOpt(FILE *inp);
GhostArgumentsOpt* pGhostArgumentsOpt(const char *str);
Arguments* pArguments(FILE *inp);
Arguments* pArguments(const char *str);
OptExpression* pOptExpression(FILE *inp);
OptExpression* pOptExpression(const char *str);
ListExpression* pListExpression(FILE *inp);
ListExpression* pListExpression(const char *str);
CommaExpressionOpt* pCommaExpressionOpt(FILE *inp);
CommaExpressionOpt* pCommaExpressionOpt(const char *str);
Block* pBlock(FILE *inp);
Block* pBlock(const char *str);
BlockAttrs* pBlockAttrs(FILE *inp);
BlockAttrs* pBlockAttrs(const char *str);
BlockElement* pBlockElement(FILE *inp);
BlockElement* pBlockElement(const char *str);
ListBlockElement* pListBlockElement(FILE *inp);
ListBlockElement* pListBlockElement(const char *str);
Annot* pAnnot(FILE *inp);
Annot* pAnnot(const char *str);
ListAnnot* pListAnnot(FILE *inp);
ListAnnot* pListAnnot(const char *str);
LocalLabel* pLocalLabel(FILE *inp);
LocalLabel* pLocalLabel(const char *str);
ListLocalLabel* pListLocalLabel(FILE *inp);
ListLocalLabel* pListLocalLabel(const char *str);
LocalLabelName* pLocalLabelName(FILE *inp);
LocalLabelName* pLocalLabelName(const char *str);
ListLocalLabelName* pListLocalLabelName(FILE *inp);
ListLocalLabelName* pListLocalLabelName(const char *str);
AnnotatedStmt* pAnnotatedStmt(FILE *inp);
AnnotatedStmt* pAnnotatedStmt(const char *str);
ElsePart* pElsePart(FILE *inp);
ElsePart* pElsePart(const char *str);
Statement* pStatement(FILE *inp);
Statement* pStatement(const char *str);
OptLoopAnnotations* pOptLoopAnnotations(FILE *inp);
OptLoopAnnotations* pOptLoopAnnotations(const char *str);
ForClause* pForClause(FILE *inp);
ForClause* pForClause(const char *str);
GhostParameterOpt* pGhostParameterOpt(FILE *inp);
GhostParameterOpt* pGhostParameterOpt(const char *str);
Declaration* pDeclaration(FILE *inp);
Declaration* pDeclaration(const char *str);
GenericAssociation* pGenericAssociation(FILE *inp);
GenericAssociation* pGenericAssociation(const char *str);
ListGenericAssociation* pListGenericAssociation(FILE *inp);
ListGenericAssociation* pListGenericAssociation(const char *str);
DeclAndInitDeclAttrList* pDeclAndInitDeclAttrList(FILE *inp);
DeclAndInitDeclAttrList* pDeclAndInitDeclAttrList(const char *str);
InitDeclaratorAttr* pInitDeclaratorAttr(FILE *inp);
InitDeclaratorAttr* pInitDeclaratorAttr(const char *str);
ListInitDeclaratorAttr* pListInitDeclaratorAttr(FILE *inp);
ListInitDeclaratorAttr* pListInitDeclaratorAttr(const char *str);
InitDeclarator* pInitDeclarator(FILE *inp);
InitDeclarator* pInitDeclarator(const char *str);
DeclSpecWOType* pDeclSpecWOType(FILE *inp);
DeclSpecWOType* pDeclSpecWOType(const char *str);
DeclSpecList* pDeclSpecList(FILE *inp);
DeclSpecList* pDeclSpecList(const char *str);
DeclSpecListNoNamed* pDeclSpecListNoNamed(FILE *inp);
DeclSpecListNoNamed* pDeclSpecListNoNamed(const char *str);
TypeSpec* pTypeSpec(FILE *inp);
TypeSpec* pTypeSpec(const char *str);
StructDeclList* pStructDeclList(FILE *inp);
StructDeclList* pStructDeclList(const char *str);
StaticAssertDeclaration* pStaticAssertDeclaration(FILE *inp);
StaticAssertDeclaration* pStaticAssertDeclaration(const char *str);
FieldDecl* pFieldDecl(FILE *inp);
FieldDecl* pFieldDecl(const char *str);
ListFieldDecl* pListFieldDecl(FILE *inp);
ListFieldDecl* pListFieldDecl(const char *str);
Enumerator* pEnumerator(FILE *inp);
Enumerator* pEnumerator(const char *str);
ListEnumerator* pListEnumerator(FILE *inp);
ListEnumerator* pListEnumerator(const char *str);
Declarator* pDeclarator(FILE *inp);
Declarator* pDeclarator(const char *str);
ListDeclarator* pListDeclarator(FILE *inp);
ListDeclarator* pListDeclarator(const char *str);
AttributesOrStatic* pAttributesOrStatic(FILE *inp);
AttributesOrStatic* pAttributesOrStatic(const char *str);
DirectDecl* pDirectDecl(FILE *inp);
DirectDecl* pDirectDecl(const char *str);
RestParList* pRestParList(FILE *inp);
RestParList* pRestParList(const char *str);
ParameterDecl* pParameterDecl(FILE *inp);
ParameterDecl* pParameterDecl(const char *str);
ListParameterDecl* pListParameterDecl(FILE *inp);
ListParameterDecl* pListParameterDecl(const char *str);
DirectOldProtoDecl* pDirectOldProtoDecl(FILE *inp);
DirectOldProtoDecl* pDirectOldProtoDecl(const char *str);
ListIdent* pListIdent(FILE *inp);
ListIdent* pListIdent(const char *str);
OldPardefList* pOldPardefList(FILE *inp);
OldPardefList* pOldPardefList(const char *str);
OldPardef* pOldPardef(FILE *inp);
OldPardef* pOldPardef(const char *str);
ListOldPardef* pListOldPardef(FILE *inp);
ListOldPardef* pListOldPardef(const char *str);
PointerOpt* pPointerOpt(FILE *inp);
PointerOpt* pPointerOpt(const char *str);
TypeName* pTypeName(FILE *inp);
TypeName* pTypeName(const char *str);
AbstractDecl* pAbstractDecl(FILE *inp);
AbstractDecl* pAbstractDecl(const char *str);
AbsDirectDecl* pAbsDirectDecl(FILE *inp);
AbsDirectDecl* pAbsDirectDecl(const char *str);
AbsDirectDeclOpt* pAbsDirectDeclOpt(FILE *inp);
AbsDirectDeclOpt* pAbsDirectDeclOpt(const char *str);
FunctionDef* pFunctionDef(FILE *inp);
FunctionDef* pFunctionDef(const char *str);
FunctionDefStart* pFunctionDefStart(FILE *inp);
FunctionDefStart* pFunctionDefStart(const char *str);
CVSpec* pCVSpec(FILE *inp);
CVSpec* pCVSpec(const char *str);
AttributesWithAsm* pAttributesWithAsm(FILE *inp);
AttributesWithAsm* pAttributesWithAsm(const char *str);
AttributeNocv* pAttributeNocv(FILE *inp);
AttributeNocv* pAttributeNocv(const char *str);
ListAttributeNocv* pListAttributeNocv(FILE *inp);
ListAttributeNocv* pListAttributeNocv(const char *str);
Attribute* pAttribute(FILE *inp);
Attribute* pAttribute(const char *str);
ListAttribute* pListAttribute(FILE *inp);
ListAttribute* pListAttribute(const char *str);
JustAttribute* pJustAttribute(FILE *inp);
JustAttribute* pJustAttribute(const char *str);
ListJustAttribute* pListJustAttribute(FILE *inp);
ListJustAttribute* pListJustAttribute(const char *str);
Pragma* pPragma(FILE *inp);
Pragma* pPragma(const char *str);
VarAttr* pVarAttr(FILE *inp);
VarAttr* pVarAttr(const char *str);
BasicAttribute* pBasicAttribute(FILE *inp);
BasicAttribute* pBasicAttribute(const char *str);
ListBasicAttribute* pListBasicAttribute(FILE *inp);
ListBasicAttribute* pListBasicAttribute(const char *str);
ParameterAttrListNE* pParameterAttrListNE(FILE *inp);
ParameterAttrListNE* pParameterAttrListNE(const char *str);
ParamAttrListNE* pParamAttrListNE(FILE *inp);
ParamAttrListNE* pParamAttrListNE(const char *str);
Attr* pAttr14(FILE *inp);
Attr* pAttr14(const char *str);
Attr* pAttr13(FILE *inp);
Attr* pAttr13(const char *str);
Attr* pAttr12(FILE *inp);
Attr* pAttr12(const char *str);
Attr* pAttr11(FILE *inp);
Attr* pAttr11(const char *str);
Attr* pAttr10(FILE *inp);
Attr* pAttr10(const char *str);
Attr* pAttr9(FILE *inp);
Attr* pAttr9(const char *str);
Attr* pAttr8(FILE *inp);
Attr* pAttr8(const char *str);
Attr* pAttr7(FILE *inp);
Attr* pAttr7(const char *str);
Attr* pAttr6(FILE *inp);
Attr* pAttr6(const char *str);
Attr* pAttr5(FILE *inp);
Attr* pAttr5(const char *str);
Attr* pAttr4(FILE *inp);
Attr* pAttr4(const char *str);
Attr* pAttr3(FILE *inp);
Attr* pAttr3(const char *str);
Attr* pAttr2(FILE *inp);
Attr* pAttr2(const char *str);
Attr* pAttr1(FILE *inp);
Attr* pAttr1(const char *str);
Attr* pAttr(FILE *inp);
Attr* pAttr(const char *str);
ListAttr* pListAttr(FILE *inp);
ListAttr* pListAttr(const char *str);
AttrTest* pAttrTest(FILE *inp);
AttrTest* pAttrTest(const char *str);
AttrList* pAttrList(FILE *inp);
AttrList* pAttrList(const char *str);
Asmattr* pAsmattr(FILE *inp);
Asmattr* pAsmattr(const char *str);
ListAsmattr* pListAsmattr(FILE *inp);
ListAsmattr* pListAsmattr(const char *str);
Asmoutputs* pAsmoutputs(FILE *inp);
Asmoutputs* pAsmoutputs(const char *str);
Asmoperands* pAsmoperands(FILE *inp);
Asmoperands* pAsmoperands(const char *str);
Asmoperand* pAsmoperand(FILE *inp);
Asmoperand* pAsmoperand(const char *str);
ListAsmoperand* pListAsmoperand(FILE *inp);
ListAsmoperand* pListAsmoperand(const char *str);
Asminputs* pAsminputs(FILE *inp);
Asminputs* pAsminputs(const char *str);
Asmopname* pAsmopname(FILE *inp);
Asmopname* pAsmopname(const char *str);
Asmclobber* pAsmclobber(FILE *inp);
Asmclobber* pAsmclobber(const char *str);
ListStringConstant* pListStringConstant(FILE *inp);
ListStringConstant* pListStringConstant(const char *str);
Asmlabels* pAsmlabels(FILE *inp);
Asmlabels* pAsmlabels(const char *str);
}

#endif
