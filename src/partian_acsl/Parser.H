/* File generated by the BNF Converter (bnfc 2.9.4.1). */

#ifndef PARTIAN_ACSL_PARSER_HEADER_FILE
#define PARTIAN_ACSL_PARSER_HEADER_FILE

#include<vector>
#include<string>
#include<cstdio>
#include "Absyn.H"

namespace partian_acsl
{
Program* pProgram(FILE *inp);
Program* pProgram(const char *str);
Globals* pGlobals(FILE *inp);
Globals* pGlobals(const char *str);
Global* pGlobal(FILE *inp);
Global* pGlobal(const char *str);
FunctionDef* pFunctionDef(FILE *inp);
FunctionDef* pFunctionDef(const char *str);
Block* pBlock(FILE *inp);
Block* pBlock(const char *str);
FunctionDefStart* pFunctionDefStart(FILE *inp);
FunctionDefStart* pFunctionDefStart(const char *str);
DeclSpecList* pDeclSpecList(FILE *inp);
DeclSpecList* pDeclSpecList(const char *str);
DeclSpecListNoNamed* pDeclSpecListNoNamed(FILE *inp);
DeclSpecListNoNamed* pDeclSpecListNoNamed(const char *str);
TypeSpec* pTypeSpec(FILE *inp);
TypeSpec* pTypeSpec(const char *str);
Declarator* pDeclarator(FILE *inp);
Declarator* pDeclarator(const char *str);
ListDeclarator* pListDeclarator(FILE *inp);
ListDeclarator* pListDeclarator(const char *str);
PointerOpt* pPointerOpt(FILE *inp);
PointerOpt* pPointerOpt(const char *str);
DirectDecl* pDirectDecl(FILE *inp);
DirectDecl* pDirectDecl(const char *str);
AttributesWithAsm* pAttributesWithAsm(FILE *inp);
AttributesWithAsm* pAttributesWithAsm(const char *str);
RestParList* pRestParList(FILE *inp);
RestParList* pRestParList(const char *str);
ParameterDecl* pParameterDecl(FILE *inp);
ParameterDecl* pParameterDecl(const char *str);
ListParameterDecl* pListParameterDecl(FILE *inp);
ListParameterDecl* pListParameterDecl(const char *str);
GhostParameterOpt* pGhostParameterOpt(FILE *inp);
GhostParameterOpt* pGhostParameterOpt(const char *str);
IdOrTypename* pIdOrTypename(FILE *inp);
IdOrTypename* pIdOrTypename(const char *str);
IdOrTypenameAsId* pIdOrTypenameAsId(FILE *inp);
IdOrTypenameAsId* pIdOrTypenameAsId(const char *str);
Declaration* pDeclaration(FILE *inp);
Declaration* pDeclaration(const char *str);
DeclAndInitDeclAttrList* pDeclAndInitDeclAttrList(FILE *inp);
DeclAndInitDeclAttrList* pDeclAndInitDeclAttrList(const char *str);
InitDeclaratorAttr* pInitDeclaratorAttr(FILE *inp);
InitDeclaratorAttr* pInitDeclaratorAttr(const char *str);
ListInitDeclaratorAttr* pListInitDeclaratorAttr(FILE *inp);
ListInitDeclaratorAttr* pListInitDeclaratorAttr(const char *str);
InitDeclarator* pInitDeclarator(FILE *inp);
InitDeclarator* pInitDeclarator(const char *str);
}

#endif
