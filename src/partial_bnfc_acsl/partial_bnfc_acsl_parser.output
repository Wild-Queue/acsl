Нетерминал бесполезен в грамматике

    OptLabel2
    ListFullIdentifier


Терминалы не используются в грамматике

    _ERROR_


Правила не используются в грамматике

  162 OptLabel2: OptLabelList

  163 ListFullIdentifier: FullIdentifier
  164                   | FullIdentifier _COMMA ListFullIdentifier


Состояние 0 конфликты: 2 сдвига/вывода
Состояние 99 конфликты: 2 сдвига/вывода
Состояние 111 конфликты: 2 сдвига/вывода
Состояние 113 конфликты: 2 сдвига/вывода
Состояние 159 конфликты: 3 сдвига/вывода
Состояние 160 конфликты: 3 сдвига/вывода
Состояние 200 конфликты: 5 сдвига/вывода
Состояние 206 конфликты: 5 сдвига/вывода
Состояние 207 конфликты: 5 сдвига/вывода


Грамматика

    0 $accept: Program $end

    1 Program: Annot
    2        | LogicPTreeAnnot

    3 Annot: Code_Annot

    4 Code_Annot: Contract

    5 Contract: Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint

    6 Requires: ε
    7         | NERequires

    8 NERequires: _KW_requires Lexpr _SEMI Requires
    9           | _KW_check _KW_requires Lexpr _SEMI Requires
   10           | _KW_admit _KW_requires Lexpr _SEMI Requires

   11 Terminates: ε

   12 Decreases: ε

   13 SimpleClauses: ε
   14              | NESimpleClauses

   15 NESimpleClauses: PostCond Lexpr _SEMI SimpleClauses
   16                | _KW_assigns Assigns _SEMI SimpleClauses

   17 Assigns: Zones
   18        | ListLexpr _SYMB_1 Zones

   19 Zones: ListLexpr
   20      | _SYMB_2

   21 Behaviors: ε

   22 CompleteOrDisjoint: ε

   23 Lexpr: Lexpr _SYMB_3 Lexpr1
   24      | Lexpr _SYMB_4 Lexpr1
   25      | Lexpr _DBAR Lexpr1
   26      | Lexpr _DAMP Lexpr1
   27      | Lexpr _DCARET Lexpr1
   28      | Lexpr1

   29 ListLexpr: Lexpr
   30          | Lexpr _COMMA ListLexpr

   31 Lexpr1: Lexpr2
   32       | Lexpr3 ListLexprRelInner Relation Lexpr2

   33 LexprRelInner: Relation Lexpr3

   34 ListLexprRelInner: ε
   35                  | ListLexprRelInner LexprRelInner

   36 Relation: _LT
   37         | _GT
   38         | _LDARROW
   39         | _GTEQ
   40         | _DEQ
   41         | _BANGEQ

   42 Lexpr2: Lexpr3
   43       | LexprBinder
   44       | _BANG LexprBinder

   45 LexprBinder: _SYMB_16 Binders _SEMI Lexpr
   46            | _SYMB_17 Binders _SEMI Lexpr
   47            | _SYMB_18 Binders _SEMI Lexpr

   48 Binders: TypeSpecOFTYPENAME VarSpec ListBindersReentrance

   49 TypeSpecOFTYPENAME: _IDENT_
   50                   | TypeSpecSimple

   51 BindersReentrance: _COMMA TypeSpecOFTYPENAME VarSpec
   52                  | _COMMA VarSpec

   53 ListBindersReentrance: ε
   54                      | ListBindersReentrance BindersReentrance

   55 VarSpec: VarSpec1
   56        | ListStars VarSpec1

   57 Stars: _STAR

   58 ListStars: Stars
   59          | Stars ListStars

   60 VarSpec1: FullIdentifier
   61         | VarSpec1 _LBRACK ArraySize _RBRACK
   62         | _LPAREN VarSpec _RPAREN

   63 ArraySize: _INTEGER_
   64          | FullIdentifier
   65          | ε

   66 Lexpr3: _SYMB_24
   67       | _SYMB_25
   68       | _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | _SYMB_27
   70       | _SYMB_28
   71       | _SYMB_29
   72       | _SYMB_30
   73       | _SYMB_31
   74       | _SYMB_32
   75       | _INTEGER_
   76       | _DOUBLE_
   77       | _STRING_
   78       | Lexpr3 _PLUS Lexpr3
   79       | Lexpr3 _MINUS Lexpr3
   80       | Lexpr3 _LBRACK Range _RBRACK
   81       | Lexpr3 _LBRACK Lexpr _RBRACK
   82       | _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | FullIdentifier
   85       | _SYMB_36
   86       | _LPAREN Lexpr _RPAREN
   87       | _LPAREN Range _RPAREN

   88 OptLabel1: OptLabelList

   89 OptLabelList: ε
   90             | _LBRACE ListLabelName _RBRACE

   91 LabelName: AnyIdentifier

   92 ListLabelName: LabelName
   93              | LabelName _COMMA ListLabelName

   94 Range: LexprOption _DDOT LexprOption

   95 LexprOption: ε
   96            | Lexpr

   97 AnyIdentifier: Identifier

   98 PostCond: _KW_ensures
   99         | _KW_exits
  100         | _KW_breaks
  101         | _KW_continues
  102         | _KW_returns
  103         | _KW_check _KW_ensures
  104         | _KW_check _KW_exits
  105         | _KW_check _KW_breaks
  106         | _KW_check _KW_continues
  107         | _KW_check _KW_returns
  108         | _KW_admit _KW_ensures
  109         | _KW_admit _KW_exits
  110         | _KW_admit _KW_breaks
  111         | _KW_admit _KW_continues
  112         | _KW_admit _KW_returns

  113 FullIdentifier: Identifier

  114 Identifier: _IDENT_

  115 TypeSpecSimple: _KW_integer
  116               | _KW_real
  117               | _KW_boolean
  118               | _KW_void
  119               | _SYMB_40
  120               | _KW_char
  121               | _KW_signed _KW_char
  122               | _KW_unsigned _KW_char
  123               | _KW_int
  124               | _KW_signed _KW_int
  125               | _KW_unsigned _KW_int
  126               | _KW_unsigned
  127               | _KW_short
  128               | _KW_signed _KW_short
  129               | _KW_unsigned _KW_short
  130               | _KW_short _KW_int
  131               | _KW_signed _KW_short _KW_int
  132               | _KW_unsigned _KW_short _KW_int
  133               | _KW_long
  134               | _KW_signed _KW_long
  135               | _KW_unsigned _KW_long
  136               | _KW_signed _KW_long _KW_int
  137               | _KW_long _KW_int
  138               | _KW_unsigned _KW_long _KW_int
  139               | _KW_long _KW_long
  140               | _KW_signed _KW_long _KW_long
  141               | _KW_unsigned _KW_long _KW_long
  142               | _KW_long _KW_long _KW_int
  143               | _KW_signed _KW_long _KW_long _KW_int
  144               | _KW_unsigned _KW_long _KW_long _KW_int
  145               | _KW_float
  146               | _KW_double
  147               | _KW_long _KW_double

  148 LogicPTreeAnnot: Annotation

  149 Annotation: LoopAnnotStack

  150 LoopAnnotStack: LoopInvariant LoopAnnotOpt
  151               | LoopEffects LoopAnnotOpt
  152               | LoopVariant LoopAnnotOpt

  153 LoopAnnotOpt: ε
  154             | LoopAnnotStack

  155 LoopInvariant: _KW_loop _KW_invariant Lexpr _SEMI
  156              | _KW_check _KW_loop _KW_invariant Lexpr _SEMI
  157              | _KW_admit _KW_loop _KW_invariant Lexpr _SEMI

  158 LoopVariant: _KW_loop _KW_variant Variant _SEMI

  159 LoopEffects: _KW_loop _KW_assigns Assigns _SEMI

  160 Variant: Lexpr _KW_for AnyIdentifier
  161        | Lexpr


Терминальные символы с правилами, в которых они появляются

    $end (0) 0
    error (256)
    _ERROR_ (258)
    _BANG (259) 44
    _BANGEQ (260) 41
    _DAMP (261) 26
    _LPAREN (262) 62 68 82 83 86 87
    _RPAREN (263) 62 68 82 83 86 87
    _STAR (264) 57
    _PLUS (265) 78
    _COMMA (266) 30 51 52 93
    _MINUS (267) 79
    _DDOT (268) 94
    _SEMI (269) 8 9 10 15 16 45 46 47 155 156 157 158 159
    _LT (270) 36
    _LDARROW (271) 38
    _SYMB_4 (272) 24
    _DEQ (273) 40
    _SYMB_3 (274) 23
    _GT (275) 37
    _GTEQ (276) 39
    _LBRACK (277) 61 80 81
    _SYMB_27 (278) 69
    _SYMB_28 (279) 70
    _SYMB_17 (280) 46
    _SYMB_25 (281) 67
    _SYMB_16 (282) 45
    _SYMB_1 (283) 18
    _SYMB_18 (284) 47
    _SYMB_2 (285) 20
    _SYMB_32 (286) 74
    _SYMB_36 (287) 85
    _SYMB_29 (288) 71
    _SYMB_35 (289) 82
    _SYMB_30 (290) 72
    _SYMB_24 (291) 66
    _SYMB_31 (292) 73
    _SYMB_26 (293) 68
    _RBRACK (294) 61 80 81
    _DCARET (295) 27
    _SYMB_40 (296) 119
    _KW_admit (297) 10 108 109 110 111 112 157
    _KW_assigns (298) 16 159
    _KW_boolean (299) 117
    _KW_breaks (300) 100 105 110
    _KW_char (301) 120 121 122
    _KW_check (302) 9 103 104 105 106 107 156
    _KW_continues (303) 101 106 111
    _KW_double (304) 146 147
    _KW_ensures (305) 98 103 108
    _KW_exits (306) 99 104 109
    _KW_float (307) 145
    _KW_for (308) 160
    _KW_int (309) 123 124 125 130 131 132 136 137 138 142 143 144
    _KW_integer (310) 115
    _KW_invariant (311) 155 156 157
    _KW_long (312) 133 134 135 136 137 138 139 140 141 142 143 144 147
    _KW_loop (313) 155 156 157 158 159
    _KW_real (314) 116
    _KW_requires (315) 8 9 10
    _KW_returns (316) 102 107 112
    _KW_short (317) 127 128 129 130 131 132
    _KW_signed (318) 121 124 128 131 134 136 140 143
    _KW_unsigned (319) 122 125 126 129 132 135 138 141 144
    _KW_variant (320) 158
    _KW_void (321) 118
    _LBRACE (322) 90
    _DBAR (323) 25
    _RBRACE (324) 90
    _STRING_ <_string> (325) 77
    _INTEGER_ <_int> (326) 63 75
    _DOUBLE_ <_double> (327) 76
    _IDENT_ <_string> (328) 49 114


Нетерминальные символы с правилами, в которых они появляются

    $accept (74)
        on left: 0
    Program <program_> (75)
        on left: 1 2
        on right: 0
    Annot <annot_> (76)
        on left: 3
        on right: 1
    Code_Annot <code_annot_> (77)
        on left: 4
        on right: 3
    Contract <contract_> (78)
        on left: 5
        on right: 4
    Requires <requires_> (79)
        on left: 6 7
        on right: 5 8 9 10
    NERequires <nerequires_> (80)
        on left: 8 9 10
        on right: 7
    Terminates <terminates_> (81)
        on left: 11
        on right: 5
    Decreases <decreases_> (82)
        on left: 12
        on right: 5
    SimpleClauses <simpleclauses_> (83)
        on left: 13 14
        on right: 5 15 16
    NESimpleClauses <nesimpleclauses_> (84)
        on left: 15 16
        on right: 14
    Assigns <assigns_> (85)
        on left: 17 18
        on right: 16 159
    Zones <zones_> (86)
        on left: 19 20
        on right: 17 18
    Behaviors <behaviors_> (87)
        on left: 21
        on right: 5
    CompleteOrDisjoint <completeordisjoint_> (88)
        on left: 22
        on right: 5
    Lexpr <lexpr_> (89)
        on left: 23 24 25 26 27 28
        on right: 8 9 10 15 23 24 25 26 27 29 30 45 46 47 68 81 86 96 155 156 157 160 161
    ListLexpr <listlexpr_> (90)
        on left: 29 30
        on right: 18 19 30 82 83
    Lexpr1 <lexpr_> (91)
        on left: 31 32
        on right: 23 24 25 26 27 28
    LexprRelInner <lexprrelinner_> (92)
        on left: 33
        on right: 35
    ListLexprRelInner <listlexprrelinner_> (93)
        on left: 34 35
        on right: 32 35
    Relation <relation_> (94)
        on left: 36 37 38 39 40 41
        on right: 32 33
    Lexpr2 <lexpr_> (95)
        on left: 42 43 44
        on right: 31 32
    LexprBinder <lexprbinder_> (96)
        on left: 45 46 47
        on right: 43 44
    Binders <binders_> (97)
        on left: 48
        on right: 45 46 47
    TypeSpecOFTYPENAME <typespecoftypename_> (98)
        on left: 49 50
        on right: 48 51
    BindersReentrance <bindersreentrance_> (99)
        on left: 51 52
        on right: 54
    ListBindersReentrance <listbindersreentrance_> (100)
        on left: 53 54
        on right: 48 54
    VarSpec <varspec_> (101)
        on left: 55 56
        on right: 48 51 52 62
    Stars <stars_> (102)
        on left: 57
        on right: 58 59
    ListStars <liststars_> (103)
        on left: 58 59
        on right: 56 59
    VarSpec1 <varspec_> (104)
        on left: 60 61 62
        on right: 55 56 61
    ArraySize <arraysize_> (105)
        on left: 63 64 65
        on right: 61
    Lexpr3 <lexpr_> (106)
        on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
        on right: 32 33 42 78 79 80 81
    OptLabel1 <optlabel_> (107)
        on left: 88
        on right: 68
    OptLabelList <optlabellist_> (108)
        on left: 89 90
        on right: 88
    LabelName <labelname_> (109)
        on left: 91
        on right: 92 93
    ListLabelName <listlabelname_> (110)
        on left: 92 93
        on right: 90 93
    Range <range_> (111)
        on left: 94
        on right: 80 87
    LexprOption <lexproption_> (112)
        on left: 95 96
        on right: 94
    AnyIdentifier <anyidentifier_> (113)
        on left: 97
        on right: 91 160
    PostCond <postcond_> (114)
        on left: 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
        on right: 15
    FullIdentifier <fullidentifier_> (115)
        on left: 113
        on right: 60 64 83 84
    Identifier <identifier_> (116)
        on left: 114
        on right: 97 113
    TypeSpecSimple <typespecsimple_> (117)
        on left: 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
        on right: 50
    LogicPTreeAnnot <logicptreeannot_> (118)
        on left: 148
        on right: 2
    Annotation <annotation_> (119)
        on left: 149
        on right: 148
    LoopAnnotStack <loopannotstack_> (120)
        on left: 150 151 152
        on right: 149 154
    LoopAnnotOpt <loopannotopt_> (121)
        on left: 153 154
        on right: 150 151 152
    LoopInvariant <loopinvariant_> (122)
        on left: 155 156 157
        on right: 150
    LoopVariant <loopvariant_> (123)
        on left: 158
        on right: 152
    LoopEffects <loopeffects_> (124)
        on left: 159
        on right: 151
    Variant <variant_> (125)
        on left: 160 161
        on right: 158


Состояние 0

    0 $accept: • Program $end
    1 Program: • Annot
    2        | • LogicPTreeAnnot
    3 Annot: • Code_Annot
    4 Code_Annot: • Contract
    5 Contract: • Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
    6 Requires: ε •  [$end, _KW_admit, _KW_assigns, _KW_breaks, _KW_check, _KW_continues, _KW_ensures, _KW_exits, _KW_returns]
    7         | • NERequires
    8 NERequires: • _KW_requires Lexpr _SEMI Requires
    9           | • _KW_check _KW_requires Lexpr _SEMI Requires
   10           | • _KW_admit _KW_requires Lexpr _SEMI Requires
  148 LogicPTreeAnnot: • Annotation
  149 Annotation: • LoopAnnotStack
  150 LoopAnnotStack: • LoopInvariant LoopAnnotOpt
  151               | • LoopEffects LoopAnnotOpt
  152               | • LoopVariant LoopAnnotOpt
  155 LoopInvariant: • _KW_loop _KW_invariant Lexpr _SEMI
  156              | • _KW_check _KW_loop _KW_invariant Lexpr _SEMI
  157              | • _KW_admit _KW_loop _KW_invariant Lexpr _SEMI
  158 LoopVariant: • _KW_loop _KW_variant Variant _SEMI
  159 LoopEffects: • _KW_loop _KW_assigns Assigns _SEMI

    _KW_admit     сдвиг, и переход в состояние 1
    _KW_check     сдвиг, и переход в состояние 2
    _KW_loop      сдвиг, и переход в состояние 3
    _KW_requires  сдвиг, и переход в состояние 4

    _KW_admit  [вывод с использованием правила 6 (Requires)]
    _KW_check  [вывод с использованием правила 6 (Requires)]
    $default   вывод с использованием правила 6 (Requires)

    Program          переход в состояние 5
    Annot            переход в состояние 6
    Code_Annot       переход в состояние 7
    Contract         переход в состояние 8
    Requires         переход в состояние 9
    NERequires       переход в состояние 10
    LogicPTreeAnnot  переход в состояние 11
    Annotation       переход в состояние 12
    LoopAnnotStack   переход в состояние 13
    LoopInvariant    переход в состояние 14
    LoopVariant      переход в состояние 15
    LoopEffects      переход в состояние 16

    shift/reduce conflict on token _KW_check:
        6 Requires: ε •
        9 NERequires: • _KW_check _KW_requires Lexpr _SEMI Requires
      First example: • _KW_check _KW_requires Lexpr _SEMI Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                                                                     $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires                                                Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
                                 ↳ 7: NERequires
                                      ↳ 9: • _KW_check _KW_requires Lexpr _SEMI Requires
      Second example: • Terminates Decreases _KW_check _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                           $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 6: ε •                      ↳ 14: NESimpleClauses
                                                                     ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                           ↳ 103: _KW_check _KW_ensures

    shift/reduce conflict on token _KW_admit:
        6 Requires: ε •
       10 NERequires: • _KW_admit _KW_requires Lexpr _SEMI Requires
      First example: • _KW_admit _KW_requires Lexpr _SEMI Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                                                                      $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires                                                 Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
                                 ↳ 7: NERequires
                                      ↳ 10: • _KW_admit _KW_requires Lexpr _SEMI Requires
      Second example: • Terminates Decreases _KW_admit _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                           $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 6: ε •                      ↳ 14: NESimpleClauses
                                                                     ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                           ↳ 108: _KW_admit _KW_ensures

    shift/reduce conflict on token _KW_check:
        6 Requires: ε •
      156 LoopInvariant: • _KW_check _KW_loop _KW_invariant Lexpr _SEMI
      First example: • _KW_check _KW_loop _KW_invariant Lexpr _SEMI LoopAnnotOpt $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                      $end
             ↳ 2: LogicPTreeAnnot
                  ↳ 148: Annotation
                         ↳ 149: LoopAnnotStack
                                ↳ 150: LoopInvariant                                         LoopAnnotOpt
                                       ↳ 156: • _KW_check _KW_loop _KW_invariant Lexpr _SEMI
      Second example: • Terminates Decreases _KW_check _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                           $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 6: ε •                      ↳ 14: NESimpleClauses
                                                                     ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                           ↳ 103: _KW_check _KW_ensures

    shift/reduce conflict on token _KW_admit:
        6 Requires: ε •
      157 LoopInvariant: • _KW_admit _KW_loop _KW_invariant Lexpr _SEMI
      First example: • _KW_admit _KW_loop _KW_invariant Lexpr _SEMI LoopAnnotOpt $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                      $end
             ↳ 2: LogicPTreeAnnot
                  ↳ 148: Annotation
                         ↳ 149: LoopAnnotStack
                                ↳ 150: LoopInvariant                                         LoopAnnotOpt
                                       ↳ 157: • _KW_admit _KW_loop _KW_invariant Lexpr _SEMI
      Second example: • Terminates Decreases _KW_admit _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                           $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 6: ε •                      ↳ 14: NESimpleClauses
                                                                     ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                           ↳ 108: _KW_admit _KW_ensures



Состояние 1

   10 NERequires: _KW_admit • _KW_requires Lexpr _SEMI Requires
  157 LoopInvariant: _KW_admit • _KW_loop _KW_invariant Lexpr _SEMI

    _KW_loop      сдвиг, и переход в состояние 17
    _KW_requires  сдвиг, и переход в состояние 18


Состояние 2

    9 NERequires: _KW_check • _KW_requires Lexpr _SEMI Requires
  156 LoopInvariant: _KW_check • _KW_loop _KW_invariant Lexpr _SEMI

    _KW_loop      сдвиг, и переход в состояние 19
    _KW_requires  сдвиг, и переход в состояние 20


Состояние 3

  155 LoopInvariant: _KW_loop • _KW_invariant Lexpr _SEMI
  158 LoopVariant: _KW_loop • _KW_variant Variant _SEMI
  159 LoopEffects: _KW_loop • _KW_assigns Assigns _SEMI

    _KW_assigns    сдвиг, и переход в состояние 21
    _KW_invariant  сдвиг, и переход в состояние 22
    _KW_variant    сдвиг, и переход в состояние 23


Состояние 4

    8 NERequires: _KW_requires • Lexpr _SEMI Requires
   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 44
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 5

    0 $accept: Program • $end

    $end  сдвиг, и переход в состояние 51


Состояние 6

    1 Program: Annot •

    $default  вывод с использованием правила 1 (Program)


Состояние 7

    3 Annot: Code_Annot •

    $default  вывод с использованием правила 3 (Annot)


Состояние 8

    4 Code_Annot: Contract •

    $default  вывод с использованием правила 4 (Code_Annot)


Состояние 9

    5 Contract: Requires • Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
   11 Terminates: ε •

    $default  вывод с использованием правила 11 (Terminates)

    Terminates  переход в состояние 52


Состояние 10

    7 Requires: NERequires •

    $default  вывод с использованием правила 7 (Requires)


Состояние 11

    2 Program: LogicPTreeAnnot •

    $default  вывод с использованием правила 2 (Program)


Состояние 12

  148 LogicPTreeAnnot: Annotation •

    $default  вывод с использованием правила 148 (LogicPTreeAnnot)


Состояние 13

  149 Annotation: LoopAnnotStack •

    $default  вывод с использованием правила 149 (Annotation)


Состояние 14

  150 LoopAnnotStack: • LoopInvariant LoopAnnotOpt
  150               | LoopInvariant • LoopAnnotOpt
  151               | • LoopEffects LoopAnnotOpt
  152               | • LoopVariant LoopAnnotOpt
  153 LoopAnnotOpt: ε •  [$end]
  154             | • LoopAnnotStack
  155 LoopInvariant: • _KW_loop _KW_invariant Lexpr _SEMI
  156              | • _KW_check _KW_loop _KW_invariant Lexpr _SEMI
  157              | • _KW_admit _KW_loop _KW_invariant Lexpr _SEMI
  158 LoopVariant: • _KW_loop _KW_variant Variant _SEMI
  159 LoopEffects: • _KW_loop _KW_assigns Assigns _SEMI

    _KW_admit  сдвиг, и переход в состояние 53
    _KW_check  сдвиг, и переход в состояние 54
    _KW_loop   сдвиг, и переход в состояние 3

    $default  вывод с использованием правила 153 (LoopAnnotOpt)

    LoopAnnotStack  переход в состояние 55
    LoopAnnotOpt    переход в состояние 56
    LoopInvariant   переход в состояние 14
    LoopVariant     переход в состояние 15
    LoopEffects     переход в состояние 16


Состояние 15

  150 LoopAnnotStack: • LoopInvariant LoopAnnotOpt
  151               | • LoopEffects LoopAnnotOpt
  152               | • LoopVariant LoopAnnotOpt
  152               | LoopVariant • LoopAnnotOpt
  153 LoopAnnotOpt: ε •  [$end]
  154             | • LoopAnnotStack
  155 LoopInvariant: • _KW_loop _KW_invariant Lexpr _SEMI
  156              | • _KW_check _KW_loop _KW_invariant Lexpr _SEMI
  157              | • _KW_admit _KW_loop _KW_invariant Lexpr _SEMI
  158 LoopVariant: • _KW_loop _KW_variant Variant _SEMI
  159 LoopEffects: • _KW_loop _KW_assigns Assigns _SEMI

    _KW_admit  сдвиг, и переход в состояние 53
    _KW_check  сдвиг, и переход в состояние 54
    _KW_loop   сдвиг, и переход в состояние 3

    $default  вывод с использованием правила 153 (LoopAnnotOpt)

    LoopAnnotStack  переход в состояние 55
    LoopAnnotOpt    переход в состояние 57
    LoopInvariant   переход в состояние 14
    LoopVariant     переход в состояние 15
    LoopEffects     переход в состояние 16


Состояние 16

  150 LoopAnnotStack: • LoopInvariant LoopAnnotOpt
  151               | • LoopEffects LoopAnnotOpt
  151               | LoopEffects • LoopAnnotOpt
  152               | • LoopVariant LoopAnnotOpt
  153 LoopAnnotOpt: ε •  [$end]
  154             | • LoopAnnotStack
  155 LoopInvariant: • _KW_loop _KW_invariant Lexpr _SEMI
  156              | • _KW_check _KW_loop _KW_invariant Lexpr _SEMI
  157              | • _KW_admit _KW_loop _KW_invariant Lexpr _SEMI
  158 LoopVariant: • _KW_loop _KW_variant Variant _SEMI
  159 LoopEffects: • _KW_loop _KW_assigns Assigns _SEMI

    _KW_admit  сдвиг, и переход в состояние 53
    _KW_check  сдвиг, и переход в состояние 54
    _KW_loop   сдвиг, и переход в состояние 3

    $default  вывод с использованием правила 153 (LoopAnnotOpt)

    LoopAnnotStack  переход в состояние 55
    LoopAnnotOpt    переход в состояние 58
    LoopInvariant   переход в состояние 14
    LoopVariant     переход в состояние 15
    LoopEffects     переход в состояние 16


Состояние 17

  157 LoopInvariant: _KW_admit _KW_loop • _KW_invariant Lexpr _SEMI

    _KW_invariant  сдвиг, и переход в состояние 59


Состояние 18

   10 NERequires: _KW_admit _KW_requires • Lexpr _SEMI Requires
   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 60
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 19

  156 LoopInvariant: _KW_check _KW_loop • _KW_invariant Lexpr _SEMI

    _KW_invariant  сдвиг, и переход в состояние 61


Состояние 20

    9 NERequires: _KW_check _KW_requires • Lexpr _SEMI Requires
   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 62
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 21

   17 Assigns: • Zones
   18        | • ListLexpr _SYMB_1 Zones
   19 Zones: • ListLexpr
   20      | • _SYMB_2
   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   29 ListLexpr: • Lexpr
   30          | • Lexpr _COMMA ListLexpr
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_
  159 LoopEffects: _KW_loop _KW_assigns • Assigns _SEMI

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_2    сдвиг, и переход в состояние 63
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Assigns         переход в состояние 64
    Zones           переход в состояние 65
    Lexpr           переход в состояние 66
    ListLexpr       переход в состояние 67
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 22

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_
  155 LoopInvariant: _KW_loop _KW_invariant • Lexpr _SEMI

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 68
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 23

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_
  158 LoopVariant: _KW_loop _KW_variant • Variant _SEMI
  160 Variant: • Lexpr _KW_for AnyIdentifier
  161        | • Lexpr

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 69
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50
    Variant         переход в состояние 70


Состояние 24

   44 Lexpr2: _BANG • LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr

    _SYMB_17  сдвиг, и переход в состояние 28
    _SYMB_16  сдвиг, и переход в состояние 30
    _SYMB_18  сдвиг, и переход в состояние 31

    LexprBinder  переход в состояние 71


Состояние 25

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   86       | _LPAREN • Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
   87       | _LPAREN • Range _RPAREN
   94 Range: • LexprOption _DDOT LexprOption
   95 LexprOption: ε •  [_DDOT]
   96            | • Lexpr
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 95 (LexprOption)

    Lexpr           переход в состояние 72
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    Range           переход в состояние 73
    LexprOption     переход в состояние 74
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 26

   69 Lexpr3: _SYMB_27 •

    $default  вывод с использованием правила 69 (Lexpr3)


Состояние 27

   70 Lexpr3: _SYMB_28 •

    $default  вывод с использованием правила 70 (Lexpr3)


Состояние 28

   46 LexprBinder: _SYMB_17 • Binders _SEMI Lexpr
   48 Binders: • TypeSpecOFTYPENAME VarSpec ListBindersReentrance
   49 TypeSpecOFTYPENAME: • _IDENT_
   50                   | • TypeSpecSimple
  115 TypeSpecSimple: • _KW_integer
  116               | • _KW_real
  117               | • _KW_boolean
  118               | • _KW_void
  119               | • _SYMB_40
  120               | • _KW_char
  121               | • _KW_signed _KW_char
  122               | • _KW_unsigned _KW_char
  123               | • _KW_int
  124               | • _KW_signed _KW_int
  125               | • _KW_unsigned _KW_int
  126               | • _KW_unsigned
  127               | • _KW_short
  128               | • _KW_signed _KW_short
  129               | • _KW_unsigned _KW_short
  130               | • _KW_short _KW_int
  131               | • _KW_signed _KW_short _KW_int
  132               | • _KW_unsigned _KW_short _KW_int
  133               | • _KW_long
  134               | • _KW_signed _KW_long
  135               | • _KW_unsigned _KW_long
  136               | • _KW_signed _KW_long _KW_int
  137               | • _KW_long _KW_int
  138               | • _KW_unsigned _KW_long _KW_int
  139               | • _KW_long _KW_long
  140               | • _KW_signed _KW_long _KW_long
  141               | • _KW_unsigned _KW_long _KW_long
  142               | • _KW_long _KW_long _KW_int
  143               | • _KW_signed _KW_long _KW_long _KW_int
  144               | • _KW_unsigned _KW_long _KW_long _KW_int
  145               | • _KW_float
  146               | • _KW_double
  147               | • _KW_long _KW_double

    _SYMB_40      сдвиг, и переход в состояние 75
    _KW_boolean   сдвиг, и переход в состояние 76
    _KW_char      сдвиг, и переход в состояние 77
    _KW_double    сдвиг, и переход в состояние 78
    _KW_float     сдвиг, и переход в состояние 79
    _KW_int       сдвиг, и переход в состояние 80
    _KW_integer   сдвиг, и переход в состояние 81
    _KW_long      сдвиг, и переход в состояние 82
    _KW_real      сдвиг, и переход в состояние 83
    _KW_short     сдвиг, и переход в состояние 84
    _KW_signed    сдвиг, и переход в состояние 85
    _KW_unsigned  сдвиг, и переход в состояние 86
    _KW_void      сдвиг, и переход в состояние 87
    _IDENT_       сдвиг, и переход в состояние 88

    Binders             переход в состояние 89
    TypeSpecOFTYPENAME  переход в состояние 90
    TypeSpecSimple      переход в состояние 91


Состояние 29

   67 Lexpr3: _SYMB_25 •

    $default  вывод с использованием правила 67 (Lexpr3)


Состояние 30

   45 LexprBinder: _SYMB_16 • Binders _SEMI Lexpr
   48 Binders: • TypeSpecOFTYPENAME VarSpec ListBindersReentrance
   49 TypeSpecOFTYPENAME: • _IDENT_
   50                   | • TypeSpecSimple
  115 TypeSpecSimple: • _KW_integer
  116               | • _KW_real
  117               | • _KW_boolean
  118               | • _KW_void
  119               | • _SYMB_40
  120               | • _KW_char
  121               | • _KW_signed _KW_char
  122               | • _KW_unsigned _KW_char
  123               | • _KW_int
  124               | • _KW_signed _KW_int
  125               | • _KW_unsigned _KW_int
  126               | • _KW_unsigned
  127               | • _KW_short
  128               | • _KW_signed _KW_short
  129               | • _KW_unsigned _KW_short
  130               | • _KW_short _KW_int
  131               | • _KW_signed _KW_short _KW_int
  132               | • _KW_unsigned _KW_short _KW_int
  133               | • _KW_long
  134               | • _KW_signed _KW_long
  135               | • _KW_unsigned _KW_long
  136               | • _KW_signed _KW_long _KW_int
  137               | • _KW_long _KW_int
  138               | • _KW_unsigned _KW_long _KW_int
  139               | • _KW_long _KW_long
  140               | • _KW_signed _KW_long _KW_long
  141               | • _KW_unsigned _KW_long _KW_long
  142               | • _KW_long _KW_long _KW_int
  143               | • _KW_signed _KW_long _KW_long _KW_int
  144               | • _KW_unsigned _KW_long _KW_long _KW_int
  145               | • _KW_float
  146               | • _KW_double
  147               | • _KW_long _KW_double

    _SYMB_40      сдвиг, и переход в состояние 75
    _KW_boolean   сдвиг, и переход в состояние 76
    _KW_char      сдвиг, и переход в состояние 77
    _KW_double    сдвиг, и переход в состояние 78
    _KW_float     сдвиг, и переход в состояние 79
    _KW_int       сдвиг, и переход в состояние 80
    _KW_integer   сдвиг, и переход в состояние 81
    _KW_long      сдвиг, и переход в состояние 82
    _KW_real      сдвиг, и переход в состояние 83
    _KW_short     сдвиг, и переход в состояние 84
    _KW_signed    сдвиг, и переход в состояние 85
    _KW_unsigned  сдвиг, и переход в состояние 86
    _KW_void      сдвиг, и переход в состояние 87
    _IDENT_       сдвиг, и переход в состояние 88

    Binders             переход в состояние 92
    TypeSpecOFTYPENAME  переход в состояние 90
    TypeSpecSimple      переход в состояние 91


Состояние 31

   47 LexprBinder: _SYMB_18 • Binders _SEMI Lexpr
   48 Binders: • TypeSpecOFTYPENAME VarSpec ListBindersReentrance
   49 TypeSpecOFTYPENAME: • _IDENT_
   50                   | • TypeSpecSimple
  115 TypeSpecSimple: • _KW_integer
  116               | • _KW_real
  117               | • _KW_boolean
  118               | • _KW_void
  119               | • _SYMB_40
  120               | • _KW_char
  121               | • _KW_signed _KW_char
  122               | • _KW_unsigned _KW_char
  123               | • _KW_int
  124               | • _KW_signed _KW_int
  125               | • _KW_unsigned _KW_int
  126               | • _KW_unsigned
  127               | • _KW_short
  128               | • _KW_signed _KW_short
  129               | • _KW_unsigned _KW_short
  130               | • _KW_short _KW_int
  131               | • _KW_signed _KW_short _KW_int
  132               | • _KW_unsigned _KW_short _KW_int
  133               | • _KW_long
  134               | • _KW_signed _KW_long
  135               | • _KW_unsigned _KW_long
  136               | • _KW_signed _KW_long _KW_int
  137               | • _KW_long _KW_int
  138               | • _KW_unsigned _KW_long _KW_int
  139               | • _KW_long _KW_long
  140               | • _KW_signed _KW_long _KW_long
  141               | • _KW_unsigned _KW_long _KW_long
  142               | • _KW_long _KW_long _KW_int
  143               | • _KW_signed _KW_long _KW_long _KW_int
  144               | • _KW_unsigned _KW_long _KW_long _KW_int
  145               | • _KW_float
  146               | • _KW_double
  147               | • _KW_long _KW_double

    _SYMB_40      сдвиг, и переход в состояние 75
    _KW_boolean   сдвиг, и переход в состояние 76
    _KW_char      сдвиг, и переход в состояние 77
    _KW_double    сдвиг, и переход в состояние 78
    _KW_float     сдвиг, и переход в состояние 79
    _KW_int       сдвиг, и переход в состояние 80
    _KW_integer   сдвиг, и переход в состояние 81
    _KW_long      сдвиг, и переход в состояние 82
    _KW_real      сдвиг, и переход в состояние 83
    _KW_short     сдвиг, и переход в состояние 84
    _KW_signed    сдвиг, и переход в состояние 85
    _KW_unsigned  сдвиг, и переход в состояние 86
    _KW_void      сдвиг, и переход в состояние 87
    _IDENT_       сдвиг, и переход в состояние 88

    Binders             переход в состояние 93
    TypeSpecOFTYPENAME  переход в состояние 90
    TypeSpecSimple      переход в состояние 91


Состояние 32

   74 Lexpr3: _SYMB_32 •

    $default  вывод с использованием правила 74 (Lexpr3)


Состояние 33

   85 Lexpr3: _SYMB_36 •

    $default  вывод с использованием правила 85 (Lexpr3)


Состояние 34

   71 Lexpr3: _SYMB_29 •

    $default  вывод с использованием правила 71 (Lexpr3)


Состояние 35

   82 Lexpr3: _SYMB_35 • _LPAREN ListLexpr _RPAREN

    _LPAREN  сдвиг, и переход в состояние 94


Состояние 36

   72 Lexpr3: _SYMB_30 •

    $default  вывод с использованием правила 72 (Lexpr3)


Состояние 37

   66 Lexpr3: _SYMB_24 •

    $default  вывод с использованием правила 66 (Lexpr3)


Состояние 38

   73 Lexpr3: _SYMB_31 •

    $default  вывод с использованием правила 73 (Lexpr3)


Состояние 39

   68 Lexpr3: _SYMB_26 • OptLabel1 _LPAREN Lexpr _RPAREN
   88 OptLabel1: • OptLabelList
   89 OptLabelList: ε •  [_LPAREN]
   90             | • _LBRACE ListLabelName _RBRACE

    _LBRACE  сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 89 (OptLabelList)

    OptLabel1     переход в состояние 96
    OptLabelList  переход в состояние 97


Состояние 40

   77 Lexpr3: _STRING_ •

    $default  вывод с использованием правила 77 (Lexpr3)


Состояние 41

   75 Lexpr3: _INTEGER_ •

    $default  вывод с использованием правила 75 (Lexpr3)


Состояние 42

   76 Lexpr3: _DOUBLE_ •

    $default  вывод с использованием правила 76 (Lexpr3)


Состояние 43

  114 Identifier: _IDENT_ •

    $default  вывод с использованием правила 114 (Identifier)


Состояние 44

    8 NERequires: _KW_requires Lexpr • _SEMI Requires
   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1

    _DAMP    сдвиг, и переход в состояние 98
    _SEMI    сдвиг, и переход в состояние 99
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103


Состояние 45

   28 Lexpr: Lexpr1 •

    $default  вывод с использованием правила 28 (Lexpr)


Состояние 46

   31 Lexpr1: Lexpr2 •

    $default  вывод с использованием правила 31 (Lexpr1)


Состояние 47

   43 Lexpr2: LexprBinder •

    $default  вывод с использованием правила 43 (Lexpr2)


Состояние 48

   32 Lexpr1: Lexpr3 • ListLexprRelInner Relation Lexpr2
   34 ListLexprRelInner: ε •  [_BANGEQ, _LT, _LDARROW, _DEQ, _GT, _GTEQ]
   35                  | • ListLexprRelInner LexprRelInner
   42 Lexpr2: Lexpr3 •  [_DAMP, _RPAREN, _COMMA, _DDOT, _SEMI, _SYMB_4, _SYMB_3, _SYMB_1, _RBRACK, _DCARET, _KW_for, _DBAR]
   78 Lexpr3: Lexpr3 • _PLUS Lexpr3
   79       | Lexpr3 • _MINUS Lexpr3
   80       | Lexpr3 • _LBRACK Range _RBRACK
   81       | Lexpr3 • _LBRACK Lexpr _RBRACK

    _PLUS    сдвиг, и переход в состояние 104
    _MINUS   сдвиг, и переход в состояние 105
    _LBRACK  сдвиг, и переход в состояние 106

    _BANGEQ   вывод с использованием правила 34 (ListLexprRelInner)
    _LT       вывод с использованием правила 34 (ListLexprRelInner)
    _LDARROW  вывод с использованием правила 34 (ListLexprRelInner)
    _DEQ      вывод с использованием правила 34 (ListLexprRelInner)
    _GT       вывод с использованием правила 34 (ListLexprRelInner)
    _GTEQ     вывод с использованием правила 34 (ListLexprRelInner)
    $default  вывод с использованием правила 42 (Lexpr2)

    ListLexprRelInner  переход в состояние 107


Состояние 49

   83 Lexpr3: FullIdentifier • _LPAREN ListLexpr _RPAREN
   84       | FullIdentifier •  [_BANGEQ, _DAMP, _RPAREN, _PLUS, _COMMA, _MINUS, _DDOT, _SEMI, _LT, _LDARROW, _SYMB_4, _DEQ, _SYMB_3, _GT, _GTEQ, _LBRACK, _SYMB_1, _RBRACK, _DCARET, _KW_for, _DBAR]

    _LPAREN  сдвиг, и переход в состояние 108

    $default  вывод с использованием правила 84 (Lexpr3)


Состояние 50

  113 FullIdentifier: Identifier •

    $default  вывод с использованием правила 113 (FullIdentifier)


Состояние 51

    0 $accept: Program $end •

    $default  принять


Состояние 52

    5 Contract: Requires Terminates • Decreases SimpleClauses Behaviors CompleteOrDisjoint
   12 Decreases: ε •

    $default  вывод с использованием правила 12 (Decreases)

    Decreases  переход в состояние 109


Состояние 53

  157 LoopInvariant: _KW_admit • _KW_loop _KW_invariant Lexpr _SEMI

    _KW_loop  сдвиг, и переход в состояние 17


Состояние 54

  156 LoopInvariant: _KW_check • _KW_loop _KW_invariant Lexpr _SEMI

    _KW_loop  сдвиг, и переход в состояние 19


Состояние 55

  154 LoopAnnotOpt: LoopAnnotStack •

    $default  вывод с использованием правила 154 (LoopAnnotOpt)


Состояние 56

  150 LoopAnnotStack: LoopInvariant LoopAnnotOpt •

    $default  вывод с использованием правила 150 (LoopAnnotStack)


Состояние 57

  152 LoopAnnotStack: LoopVariant LoopAnnotOpt •

    $default  вывод с использованием правила 152 (LoopAnnotStack)


Состояние 58

  151 LoopAnnotStack: LoopEffects LoopAnnotOpt •

    $default  вывод с использованием правила 151 (LoopAnnotStack)


Состояние 59

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_
  157 LoopInvariant: _KW_admit _KW_loop _KW_invariant • Lexpr _SEMI

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 110
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 60

   10 NERequires: _KW_admit _KW_requires Lexpr • _SEMI Requires
   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1

    _DAMP    сдвиг, и переход в состояние 98
    _SEMI    сдвиг, и переход в состояние 111
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103


Состояние 61

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_
  156 LoopInvariant: _KW_check _KW_loop _KW_invariant • Lexpr _SEMI

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 112
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 62

    9 NERequires: _KW_check _KW_requires Lexpr • _SEMI Requires
   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1

    _DAMP    сдвиг, и переход в состояние 98
    _SEMI    сдвиг, и переход в состояние 113
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103


Состояние 63

   20 Zones: _SYMB_2 •

    $default  вывод с использованием правила 20 (Zones)


Состояние 64

  159 LoopEffects: _KW_loop _KW_assigns Assigns • _SEMI

    _SEMI  сдвиг, и переход в состояние 114


Состояние 65

   17 Assigns: Zones •

    $default  вывод с использованием правила 17 (Assigns)


Состояние 66

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
   29 ListLexpr: Lexpr •  [_RPAREN, _SEMI, _SYMB_1]
   30          | Lexpr • _COMMA ListLexpr

    _DAMP    сдвиг, и переход в состояние 98
    _COMMA   сдвиг, и переход в состояние 115
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 29 (ListLexpr)


Состояние 67

   18 Assigns: ListLexpr • _SYMB_1 Zones
   19 Zones: ListLexpr •  [_SEMI]

    _SYMB_1  сдвиг, и переход в состояние 116

    $default  вывод с использованием правила 19 (Zones)


Состояние 68

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
  155 LoopInvariant: _KW_loop _KW_invariant Lexpr • _SEMI

    _DAMP    сдвиг, и переход в состояние 98
    _SEMI    сдвиг, и переход в состояние 117
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103


Состояние 69

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
  160 Variant: Lexpr • _KW_for AnyIdentifier
  161        | Lexpr •  [_SEMI]

    _DAMP    сдвиг, и переход в состояние 98
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _KW_for  сдвиг, и переход в состояние 118
    _DBAR    сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 161 (Variant)


Состояние 70

  158 LoopVariant: _KW_loop _KW_variant Variant • _SEMI

    _SEMI  сдвиг, и переход в состояние 119


Состояние 71

   44 Lexpr2: _BANG LexprBinder •

    $default  вывод с использованием правила 44 (Lexpr2)


Состояние 72

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
   86 Lexpr3: _LPAREN Lexpr • _RPAREN
   96 LexprOption: Lexpr •  [_DDOT]

    _DAMP    сдвиг, и переход в состояние 98
    _RPAREN  сдвиг, и переход в состояние 120
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 96 (LexprOption)


Состояние 73

   87 Lexpr3: _LPAREN Range • _RPAREN

    _RPAREN  сдвиг, и переход в состояние 121


Состояние 74

   94 Range: LexprOption • _DDOT LexprOption

    _DDOT  сдвиг, и переход в состояние 122


Состояние 75

  119 TypeSpecSimple: _SYMB_40 •

    $default  вывод с использованием правила 119 (TypeSpecSimple)


Состояние 76

  117 TypeSpecSimple: _KW_boolean •

    $default  вывод с использованием правила 117 (TypeSpecSimple)


Состояние 77

  120 TypeSpecSimple: _KW_char •

    $default  вывод с использованием правила 120 (TypeSpecSimple)


Состояние 78

  146 TypeSpecSimple: _KW_double •

    $default  вывод с использованием правила 146 (TypeSpecSimple)


Состояние 79

  145 TypeSpecSimple: _KW_float •

    $default  вывод с использованием правила 145 (TypeSpecSimple)


Состояние 80

  123 TypeSpecSimple: _KW_int •

    $default  вывод с использованием правила 123 (TypeSpecSimple)


Состояние 81

  115 TypeSpecSimple: _KW_integer •

    $default  вывод с использованием правила 115 (TypeSpecSimple)


Состояние 82

  133 TypeSpecSimple: _KW_long •  [_LPAREN, _STAR, _IDENT_]
  137               | _KW_long • _KW_int
  139               | _KW_long • _KW_long
  142               | _KW_long • _KW_long _KW_int
  147               | _KW_long • _KW_double

    _KW_double  сдвиг, и переход в состояние 123
    _KW_int     сдвиг, и переход в состояние 124
    _KW_long    сдвиг, и переход в состояние 125

    $default  вывод с использованием правила 133 (TypeSpecSimple)


Состояние 83

  116 TypeSpecSimple: _KW_real •

    $default  вывод с использованием правила 116 (TypeSpecSimple)


Состояние 84

  127 TypeSpecSimple: _KW_short •  [_LPAREN, _STAR, _IDENT_]
  130               | _KW_short • _KW_int

    _KW_int  сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 127 (TypeSpecSimple)


Состояние 85

  121 TypeSpecSimple: _KW_signed • _KW_char
  124               | _KW_signed • _KW_int
  128               | _KW_signed • _KW_short
  131               | _KW_signed • _KW_short _KW_int
  134               | _KW_signed • _KW_long
  136               | _KW_signed • _KW_long _KW_int
  140               | _KW_signed • _KW_long _KW_long
  143               | _KW_signed • _KW_long _KW_long _KW_int

    _KW_char   сдвиг, и переход в состояние 127
    _KW_int    сдвиг, и переход в состояние 128
    _KW_long   сдвиг, и переход в состояние 129
    _KW_short  сдвиг, и переход в состояние 130


Состояние 86

  122 TypeSpecSimple: _KW_unsigned • _KW_char
  125               | _KW_unsigned • _KW_int
  126               | _KW_unsigned •  [_LPAREN, _STAR, _IDENT_]
  129               | _KW_unsigned • _KW_short
  132               | _KW_unsigned • _KW_short _KW_int
  135               | _KW_unsigned • _KW_long
  138               | _KW_unsigned • _KW_long _KW_int
  141               | _KW_unsigned • _KW_long _KW_long
  144               | _KW_unsigned • _KW_long _KW_long _KW_int

    _KW_char   сдвиг, и переход в состояние 131
    _KW_int    сдвиг, и переход в состояние 132
    _KW_long   сдвиг, и переход в состояние 133
    _KW_short  сдвиг, и переход в состояние 134

    $default  вывод с использованием правила 126 (TypeSpecSimple)


Состояние 87

  118 TypeSpecSimple: _KW_void •

    $default  вывод с использованием правила 118 (TypeSpecSimple)


Состояние 88

   49 TypeSpecOFTYPENAME: _IDENT_ •

    $default  вывод с использованием правила 49 (TypeSpecOFTYPENAME)


Состояние 89

   46 LexprBinder: _SYMB_17 Binders • _SEMI Lexpr

    _SEMI  сдвиг, и переход в состояние 135


Состояние 90

   48 Binders: TypeSpecOFTYPENAME • VarSpec ListBindersReentrance
   55 VarSpec: • VarSpec1
   56        | • ListStars VarSpec1
   57 Stars: • _STAR
   58 ListStars: • Stars
   59          | • Stars ListStars
   60 VarSpec1: • FullIdentifier
   61         | • VarSpec1 _LBRACK ArraySize _RBRACK
   62         | • _LPAREN VarSpec _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _LPAREN  сдвиг, и переход в состояние 136
    _STAR    сдвиг, и переход в состояние 137
    _IDENT_  сдвиг, и переход в состояние 43

    VarSpec         переход в состояние 138
    Stars           переход в состояние 139
    ListStars       переход в состояние 140
    VarSpec1        переход в состояние 141
    FullIdentifier  переход в состояние 142
    Identifier      переход в состояние 50


Состояние 91

   50 TypeSpecOFTYPENAME: TypeSpecSimple •

    $default  вывод с использованием правила 50 (TypeSpecOFTYPENAME)


Состояние 92

   45 LexprBinder: _SYMB_16 Binders • _SEMI Lexpr

    _SEMI  сдвиг, и переход в состояние 143


Состояние 93

   47 LexprBinder: _SYMB_18 Binders • _SEMI Lexpr

    _SEMI  сдвиг, и переход в состояние 144


Состояние 94

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   29 ListLexpr: • Lexpr
   30          | • Lexpr _COMMA ListLexpr
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   82       | _SYMB_35 _LPAREN • ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 66
    ListLexpr       переход в состояние 145
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 95

   90 OptLabelList: _LBRACE • ListLabelName _RBRACE
   91 LabelName: • AnyIdentifier
   92 ListLabelName: • LabelName
   93              | • LabelName _COMMA ListLabelName
   97 AnyIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _IDENT_  сдвиг, и переход в состояние 43

    LabelName      переход в состояние 146
    ListLabelName  переход в состояние 147
    AnyIdentifier  переход в состояние 148
    Identifier     переход в состояние 149


Состояние 96

   68 Lexpr3: _SYMB_26 OptLabel1 • _LPAREN Lexpr _RPAREN

    _LPAREN  сдвиг, и переход в состояние 150


Состояние 97

   88 OptLabel1: OptLabelList •

    $default  вывод с использованием правила 88 (OptLabel1)


Состояние 98

   26 Lexpr: Lexpr _DAMP • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr1          переход в состояние 151
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 99

    6 Requires: ε •  [$end, _KW_admit, _KW_assigns, _KW_breaks, _KW_check, _KW_continues, _KW_ensures, _KW_exits, _KW_returns]
    7         | • NERequires
    8 NERequires: • _KW_requires Lexpr _SEMI Requires
    8           | _KW_requires Lexpr _SEMI • Requires
    9           | • _KW_check _KW_requires Lexpr _SEMI Requires
   10           | • _KW_admit _KW_requires Lexpr _SEMI Requires

    _KW_admit     сдвиг, и переход в состояние 152
    _KW_check     сдвиг, и переход в состояние 153
    _KW_requires  сдвиг, и переход в состояние 4

    _KW_admit  [вывод с использованием правила 6 (Requires)]
    _KW_check  [вывод с использованием правила 6 (Requires)]
    $default   вывод с использованием правила 6 (Requires)

    Requires    переход в состояние 154
    NERequires  переход в состояние 10

    shift/reduce conflict on token _KW_check:
        6 Requires: ε •
        9 NERequires: • _KW_check _KW_requires Lexpr _SEMI Requires
      First example: _KW_requires Lexpr _SEMI • _KW_check _KW_requires Lexpr _SEMI Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                                                                                                   $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: NERequires                                                                            Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
                                 ↳ 8: _KW_requires Lexpr _SEMI Requires
                                                               ↳ 7: NERequires
                                                                    ↳ 9: • _KW_check _KW_requires Lexpr _SEMI Requires
      Second example: _KW_requires Lexpr _SEMI • Terminates Decreases _KW_check _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                                                              $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires                                    Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 7: NERequires                                                  ↳ 14: NESimpleClauses
                                      ↳ 8: _KW_requires Lexpr _SEMI Requires                            ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                    ↳ 6: ε •                                  ↳ 103: _KW_check _KW_ensures

    shift/reduce conflict on token _KW_admit:
        6 Requires: ε •
       10 NERequires: • _KW_admit _KW_requires Lexpr _SEMI Requires
      First example: _KW_requires Lexpr _SEMI • _KW_admit _KW_requires Lexpr _SEMI Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                                                                                                    $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: NERequires                                                                             Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
                                 ↳ 8: _KW_requires Lexpr _SEMI Requires
                                                               ↳ 7: NERequires
                                                                    ↳ 10: • _KW_admit _KW_requires Lexpr _SEMI Requires
      Second example: _KW_requires Lexpr _SEMI • Terminates Decreases _KW_admit _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                                                              $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires                                    Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 7: NERequires                                                  ↳ 14: NESimpleClauses
                                      ↳ 8: _KW_requires Lexpr _SEMI Requires                            ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                    ↳ 6: ε •                                  ↳ 108: _KW_admit _KW_ensures



Состояние 100

   24 Lexpr: Lexpr _SYMB_4 • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr1          переход в состояние 155
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 101

   23 Lexpr: Lexpr _SYMB_3 • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr1          переход в состояние 156
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 102

   27 Lexpr: Lexpr _DCARET • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr1          переход в состояние 157
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 103

   25 Lexpr: Lexpr _DBAR • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr1          переход в состояние 158
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 104

   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   78       | Lexpr3 _PLUS • Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr3          переход в состояние 159
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 105

   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   79       | Lexpr3 _MINUS • Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr3          переход в состояние 160
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 106

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   80       | Lexpr3 _LBRACK • Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   81       | Lexpr3 _LBRACK • Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
   94 Range: • LexprOption _DDOT LexprOption
   95 LexprOption: ε •  [_DDOT]
   96            | • Lexpr
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 95 (LexprOption)

    Lexpr           переход в состояние 161
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    Range           переход в состояние 162
    LexprOption     переход в состояние 74
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 107

   32 Lexpr1: Lexpr3 ListLexprRelInner • Relation Lexpr2
   33 LexprRelInner: • Relation Lexpr3
   35 ListLexprRelInner: ListLexprRelInner • LexprRelInner
   36 Relation: • _LT
   37         | • _GT
   38         | • _LDARROW
   39         | • _GTEQ
   40         | • _DEQ
   41         | • _BANGEQ

    _BANGEQ   сдвиг, и переход в состояние 163
    _LT       сдвиг, и переход в состояние 164
    _LDARROW  сдвиг, и переход в состояние 165
    _DEQ      сдвиг, и переход в состояние 166
    _GT       сдвиг, и переход в состояние 167
    _GTEQ     сдвиг, и переход в состояние 168

    LexprRelInner  переход в состояние 169
    Relation       переход в состояние 170


Состояние 108

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   29 ListLexpr: • Lexpr
   30          | • Lexpr _COMMA ListLexpr
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   83       | FullIdentifier _LPAREN • ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 66
    ListLexpr       переход в состояние 171
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 109

    5 Contract: Requires Terminates Decreases • SimpleClauses Behaviors CompleteOrDisjoint
   13 SimpleClauses: ε •  [$end]
   14              | • NESimpleClauses
   15 NESimpleClauses: • PostCond Lexpr _SEMI SimpleClauses
   16                | • _KW_assigns Assigns _SEMI SimpleClauses
   98 PostCond: • _KW_ensures
   99         | • _KW_exits
  100         | • _KW_breaks
  101         | • _KW_continues
  102         | • _KW_returns
  103         | • _KW_check _KW_ensures
  104         | • _KW_check _KW_exits
  105         | • _KW_check _KW_breaks
  106         | • _KW_check _KW_continues
  107         | • _KW_check _KW_returns
  108         | • _KW_admit _KW_ensures
  109         | • _KW_admit _KW_exits
  110         | • _KW_admit _KW_breaks
  111         | • _KW_admit _KW_continues
  112         | • _KW_admit _KW_returns

    _KW_admit      сдвиг, и переход в состояние 172
    _KW_assigns    сдвиг, и переход в состояние 173
    _KW_breaks     сдвиг, и переход в состояние 174
    _KW_check      сдвиг, и переход в состояние 175
    _KW_continues  сдвиг, и переход в состояние 176
    _KW_ensures    сдвиг, и переход в состояние 177
    _KW_exits      сдвиг, и переход в состояние 178
    _KW_returns    сдвиг, и переход в состояние 179

    $default  вывод с использованием правила 13 (SimpleClauses)

    SimpleClauses    переход в состояние 180
    NESimpleClauses  переход в состояние 181
    PostCond         переход в состояние 182


Состояние 110

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
  157 LoopInvariant: _KW_admit _KW_loop _KW_invariant Lexpr • _SEMI

    _DAMP    сдвиг, и переход в состояние 98
    _SEMI    сдвиг, и переход в состояние 183
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103


Состояние 111

    6 Requires: ε •  [$end, _KW_admit, _KW_assigns, _KW_breaks, _KW_check, _KW_continues, _KW_ensures, _KW_exits, _KW_returns]
    7         | • NERequires
    8 NERequires: • _KW_requires Lexpr _SEMI Requires
    9           | • _KW_check _KW_requires Lexpr _SEMI Requires
   10           | • _KW_admit _KW_requires Lexpr _SEMI Requires
   10           | _KW_admit _KW_requires Lexpr _SEMI • Requires

    _KW_admit     сдвиг, и переход в состояние 152
    _KW_check     сдвиг, и переход в состояние 153
    _KW_requires  сдвиг, и переход в состояние 4

    _KW_admit  [вывод с использованием правила 6 (Requires)]
    _KW_check  [вывод с использованием правила 6 (Requires)]
    $default   вывод с использованием правила 6 (Requires)

    Requires    переход в состояние 184
    NERequires  переход в состояние 10

    shift/reduce conflict on token _KW_check:
        6 Requires: ε •
        9 NERequires: • _KW_check _KW_requires Lexpr _SEMI Requires
      First example: _KW_admit _KW_requires Lexpr _SEMI • _KW_check _KW_requires Lexpr _SEMI Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                                                                                                              $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: NERequires                                                                                       Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
                                 ↳ 10: _KW_admit _KW_requires Lexpr _SEMI Requires
                                                                          ↳ 7: NERequires
                                                                               ↳ 9: • _KW_check _KW_requires Lexpr _SEMI Requires
      Second example: _KW_admit _KW_requires Lexpr _SEMI • Terminates Decreases _KW_check _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                                                                         $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires                                               Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 7: NERequires                                                             ↳ 14: NESimpleClauses
                                      ↳ 10: _KW_admit _KW_requires Lexpr _SEMI Requires                            ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                               ↳ 6: ε •                                  ↳ 103: _KW_check _KW_ensures

    shift/reduce conflict on token _KW_admit:
        6 Requires: ε •
       10 NERequires: • _KW_admit _KW_requires Lexpr _SEMI Requires
      First example: _KW_admit _KW_requires Lexpr _SEMI • _KW_admit _KW_requires Lexpr _SEMI Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                                                                                                               $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: NERequires                                                                                        Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
                                 ↳ 10: _KW_admit _KW_requires Lexpr _SEMI Requires
                                                                          ↳ 7: NERequires
                                                                               ↳ 10: • _KW_admit _KW_requires Lexpr _SEMI Requires
      Second example: _KW_admit _KW_requires Lexpr _SEMI • Terminates Decreases _KW_admit _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                                                                         $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires                                               Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 7: NERequires                                                             ↳ 14: NESimpleClauses
                                      ↳ 10: _KW_admit _KW_requires Lexpr _SEMI Requires                            ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                               ↳ 6: ε •                                  ↳ 108: _KW_admit _KW_ensures



Состояние 112

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
  156 LoopInvariant: _KW_check _KW_loop _KW_invariant Lexpr • _SEMI

    _DAMP    сдвиг, и переход в состояние 98
    _SEMI    сдвиг, и переход в состояние 185
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103


Состояние 113

    6 Requires: ε •  [$end, _KW_admit, _KW_assigns, _KW_breaks, _KW_check, _KW_continues, _KW_ensures, _KW_exits, _KW_returns]
    7         | • NERequires
    8 NERequires: • _KW_requires Lexpr _SEMI Requires
    9           | • _KW_check _KW_requires Lexpr _SEMI Requires
    9           | _KW_check _KW_requires Lexpr _SEMI • Requires
   10           | • _KW_admit _KW_requires Lexpr _SEMI Requires

    _KW_admit     сдвиг, и переход в состояние 152
    _KW_check     сдвиг, и переход в состояние 153
    _KW_requires  сдвиг, и переход в состояние 4

    _KW_admit  [вывод с использованием правила 6 (Requires)]
    _KW_check  [вывод с использованием правила 6 (Requires)]
    $default   вывод с использованием правила 6 (Requires)

    Requires    переход в состояние 186
    NERequires  переход в состояние 10

    shift/reduce conflict on token _KW_check:
        6 Requires: ε •
        9 NERequires: • _KW_check _KW_requires Lexpr _SEMI Requires
      First example: _KW_check _KW_requires Lexpr _SEMI • _KW_check _KW_requires Lexpr _SEMI Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                                                                                                             $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: NERequires                                                                                      Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
                                 ↳ 9: _KW_check _KW_requires Lexpr _SEMI Requires
                                                                         ↳ 7: NERequires
                                                                              ↳ 9: • _KW_check _KW_requires Lexpr _SEMI Requires
      Second example: _KW_check _KW_requires Lexpr _SEMI • Terminates Decreases _KW_check _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                                                                        $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires                                              Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 7: NERequires                                                            ↳ 14: NESimpleClauses
                                      ↳ 9: _KW_check _KW_requires Lexpr _SEMI Requires                            ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                              ↳ 6: ε •                                  ↳ 103: _KW_check _KW_ensures

    shift/reduce conflict on token _KW_admit:
        6 Requires: ε •
       10 NERequires: • _KW_admit _KW_requires Lexpr _SEMI Requires
      First example: _KW_check _KW_requires Lexpr _SEMI • _KW_admit _KW_requires Lexpr _SEMI Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint $end
      Shift derivation
        $accept
        ↳ 0: Program                                                                                                                                                                              $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: NERequires                                                                                       Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
                                 ↳ 9: _KW_check _KW_requires Lexpr _SEMI Requires
                                                                         ↳ 7: NERequires
                                                                              ↳ 10: • _KW_admit _KW_requires Lexpr _SEMI Requires
      Second example: _KW_check _KW_requires Lexpr _SEMI • Terminates Decreases _KW_admit _KW_ensures Lexpr _SEMI SimpleClauses Behaviors CompleteOrDisjoint $end
      Reduce derivation
        $accept
        ↳ 0: Program                                                                                                                                                                                        $end
             ↳ 1: Annot
                  ↳ 3: Code_Annot
                       ↳ 4: Contract
                            ↳ 5: Requires                                              Terminates Decreases SimpleClauses                                                      Behaviors CompleteOrDisjoint
                                 ↳ 7: NERequires                                                            ↳ 14: NESimpleClauses
                                      ↳ 9: _KW_check _KW_requires Lexpr _SEMI Requires                            ↳ 15: PostCond                     Lexpr _SEMI SimpleClauses
                                                                              ↳ 6: ε •                                  ↳ 108: _KW_admit _KW_ensures



Состояние 114

  159 LoopEffects: _KW_loop _KW_assigns Assigns _SEMI •

    $default  вывод с использованием правила 159 (LoopEffects)


Состояние 115

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   29 ListLexpr: • Lexpr
   30          | • Lexpr _COMMA ListLexpr
   30          | Lexpr _COMMA • ListLexpr
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 66
    ListLexpr       переход в состояние 187
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 116

   18 Assigns: ListLexpr _SYMB_1 • Zones
   19 Zones: • ListLexpr
   20      | • _SYMB_2
   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   29 ListLexpr: • Lexpr
   30          | • Lexpr _COMMA ListLexpr
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_2    сдвиг, и переход в состояние 63
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Zones           переход в состояние 188
    Lexpr           переход в состояние 66
    ListLexpr       переход в состояние 189
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 117

  155 LoopInvariant: _KW_loop _KW_invariant Lexpr _SEMI •

    $default  вывод с использованием правила 155 (LoopInvariant)


Состояние 118

   97 AnyIdentifier: • Identifier
  114 Identifier: • _IDENT_
  160 Variant: Lexpr _KW_for • AnyIdentifier

    _IDENT_  сдвиг, и переход в состояние 43

    AnyIdentifier  переход в состояние 190
    Identifier     переход в состояние 149


Состояние 119

  158 LoopVariant: _KW_loop _KW_variant Variant _SEMI •

    $default  вывод с использованием правила 158 (LoopVariant)


Состояние 120

   86 Lexpr3: _LPAREN Lexpr _RPAREN •

    $default  вывод с использованием правила 86 (Lexpr3)


Состояние 121

   87 Lexpr3: _LPAREN Range _RPAREN •

    $default  вывод с использованием правила 87 (Lexpr3)


Состояние 122

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
   94 Range: LexprOption _DDOT • LexprOption
   95 LexprOption: ε •  [_RPAREN, _RBRACK]
   96            | • Lexpr
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 95 (LexprOption)

    Lexpr           переход в состояние 191
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    LexprOption     переход в состояние 192
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 123

  147 TypeSpecSimple: _KW_long _KW_double •

    $default  вывод с использованием правила 147 (TypeSpecSimple)


Состояние 124

  137 TypeSpecSimple: _KW_long _KW_int •

    $default  вывод с использованием правила 137 (TypeSpecSimple)


Состояние 125

  139 TypeSpecSimple: _KW_long _KW_long •  [_LPAREN, _STAR, _IDENT_]
  142               | _KW_long _KW_long • _KW_int

    _KW_int  сдвиг, и переход в состояние 193

    $default  вывод с использованием правила 139 (TypeSpecSimple)


Состояние 126

  130 TypeSpecSimple: _KW_short _KW_int •

    $default  вывод с использованием правила 130 (TypeSpecSimple)


Состояние 127

  121 TypeSpecSimple: _KW_signed _KW_char •

    $default  вывод с использованием правила 121 (TypeSpecSimple)


Состояние 128

  124 TypeSpecSimple: _KW_signed _KW_int •

    $default  вывод с использованием правила 124 (TypeSpecSimple)


Состояние 129

  134 TypeSpecSimple: _KW_signed _KW_long •  [_LPAREN, _STAR, _IDENT_]
  136               | _KW_signed _KW_long • _KW_int
  140               | _KW_signed _KW_long • _KW_long
  143               | _KW_signed _KW_long • _KW_long _KW_int

    _KW_int   сдвиг, и переход в состояние 194
    _KW_long  сдвиг, и переход в состояние 195

    $default  вывод с использованием правила 134 (TypeSpecSimple)


Состояние 130

  128 TypeSpecSimple: _KW_signed _KW_short •  [_LPAREN, _STAR, _IDENT_]
  131               | _KW_signed _KW_short • _KW_int

    _KW_int  сдвиг, и переход в состояние 196

    $default  вывод с использованием правила 128 (TypeSpecSimple)


Состояние 131

  122 TypeSpecSimple: _KW_unsigned _KW_char •

    $default  вывод с использованием правила 122 (TypeSpecSimple)


Состояние 132

  125 TypeSpecSimple: _KW_unsigned _KW_int •

    $default  вывод с использованием правила 125 (TypeSpecSimple)


Состояние 133

  135 TypeSpecSimple: _KW_unsigned _KW_long •  [_LPAREN, _STAR, _IDENT_]
  138               | _KW_unsigned _KW_long • _KW_int
  141               | _KW_unsigned _KW_long • _KW_long
  144               | _KW_unsigned _KW_long • _KW_long _KW_int

    _KW_int   сдвиг, и переход в состояние 197
    _KW_long  сдвиг, и переход в состояние 198

    $default  вывод с использованием правила 135 (TypeSpecSimple)


Состояние 134

  129 TypeSpecSimple: _KW_unsigned _KW_short •  [_LPAREN, _STAR, _IDENT_]
  132               | _KW_unsigned _KW_short • _KW_int

    _KW_int  сдвиг, и переход в состояние 199

    $default  вывод с использованием правила 129 (TypeSpecSimple)


Состояние 135

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   46            | _SYMB_17 Binders _SEMI • Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 200
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 136

   55 VarSpec: • VarSpec1
   56        | • ListStars VarSpec1
   57 Stars: • _STAR
   58 ListStars: • Stars
   59          | • Stars ListStars
   60 VarSpec1: • FullIdentifier
   61         | • VarSpec1 _LBRACK ArraySize _RBRACK
   62         | • _LPAREN VarSpec _RPAREN
   62         | _LPAREN • VarSpec _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _LPAREN  сдвиг, и переход в состояние 136
    _STAR    сдвиг, и переход в состояние 137
    _IDENT_  сдвиг, и переход в состояние 43

    VarSpec         переход в состояние 201
    Stars           переход в состояние 139
    ListStars       переход в состояние 140
    VarSpec1        переход в состояние 141
    FullIdentifier  переход в состояние 142
    Identifier      переход в состояние 50


Состояние 137

   57 Stars: _STAR •

    $default  вывод с использованием правила 57 (Stars)


Состояние 138

   48 Binders: TypeSpecOFTYPENAME VarSpec • ListBindersReentrance
   53 ListBindersReentrance: ε •
   54                      | • ListBindersReentrance BindersReentrance

    $default  вывод с использованием правила 53 (ListBindersReentrance)

    ListBindersReentrance  переход в состояние 202


Состояние 139

   57 Stars: • _STAR
   58 ListStars: • Stars
   58          | Stars •  [_LPAREN, _IDENT_]
   59          | • Stars ListStars
   59          | Stars • ListStars

    _STAR  сдвиг, и переход в состояние 137

    $default  вывод с использованием правила 58 (ListStars)

    Stars      переход в состояние 139
    ListStars  переход в состояние 203


Состояние 140

   56 VarSpec: ListStars • VarSpec1
   60 VarSpec1: • FullIdentifier
   61         | • VarSpec1 _LBRACK ArraySize _RBRACK
   62         | • _LPAREN VarSpec _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _LPAREN  сдвиг, и переход в состояние 136
    _IDENT_  сдвиг, и переход в состояние 43

    VarSpec1        переход в состояние 204
    FullIdentifier  переход в состояние 142
    Identifier      переход в состояние 50


Состояние 141

   55 VarSpec: VarSpec1 •  [_RPAREN, _COMMA, _SEMI]
   61 VarSpec1: VarSpec1 • _LBRACK ArraySize _RBRACK

    _LBRACK  сдвиг, и переход в состояние 205

    $default  вывод с использованием правила 55 (VarSpec)


Состояние 142

   60 VarSpec1: FullIdentifier •

    $default  вывод с использованием правила 60 (VarSpec1)


Состояние 143

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   45            | _SYMB_16 Binders _SEMI • Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 206
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 144

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   47            | _SYMB_18 Binders _SEMI • Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 207
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 145

   82 Lexpr3: _SYMB_35 _LPAREN ListLexpr • _RPAREN

    _RPAREN  сдвиг, и переход в состояние 208


Состояние 146

   92 ListLabelName: LabelName •  [_RBRACE]
   93              | LabelName • _COMMA ListLabelName

    _COMMA  сдвиг, и переход в состояние 209

    $default  вывод с использованием правила 92 (ListLabelName)


Состояние 147

   90 OptLabelList: _LBRACE ListLabelName • _RBRACE

    _RBRACE  сдвиг, и переход в состояние 210


Состояние 148

   91 LabelName: AnyIdentifier •

    $default  вывод с использованием правила 91 (LabelName)


Состояние 149

   97 AnyIdentifier: Identifier •

    $default  вывод с использованием правила 97 (AnyIdentifier)


Состояние 150

   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   68       | _SYMB_26 OptLabel1 _LPAREN • Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 211
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 151

   26 Lexpr: Lexpr _DAMP Lexpr1 •

    $default  вывод с использованием правила 26 (Lexpr)


Состояние 152

   10 NERequires: _KW_admit • _KW_requires Lexpr _SEMI Requires

    _KW_requires  сдвиг, и переход в состояние 18


Состояние 153

    9 NERequires: _KW_check • _KW_requires Lexpr _SEMI Requires

    _KW_requires  сдвиг, и переход в состояние 20


Состояние 154

    8 NERequires: _KW_requires Lexpr _SEMI Requires •

    $default  вывод с использованием правила 8 (NERequires)


Состояние 155

   24 Lexpr: Lexpr _SYMB_4 Lexpr1 •

    $default  вывод с использованием правила 24 (Lexpr)


Состояние 156

   23 Lexpr: Lexpr _SYMB_3 Lexpr1 •

    $default  вывод с использованием правила 23 (Lexpr)


Состояние 157

   27 Lexpr: Lexpr _DCARET Lexpr1 •

    $default  вывод с использованием правила 27 (Lexpr)


Состояние 158

   25 Lexpr: Lexpr _DBAR Lexpr1 •

    $default  вывод с использованием правила 25 (Lexpr)


Состояние 159

   78 Lexpr3: Lexpr3 • _PLUS Lexpr3
   78       | Lexpr3 _PLUS Lexpr3 •  [_BANGEQ, _DAMP, _RPAREN, _PLUS, _COMMA, _MINUS, _DDOT, _SEMI, _LT, _LDARROW, _SYMB_4, _DEQ, _SYMB_3, _GT, _GTEQ, _LBRACK, _SYMB_1, _RBRACK, _DCARET, _KW_for, _DBAR]
   79       | Lexpr3 • _MINUS Lexpr3
   80       | Lexpr3 • _LBRACK Range _RBRACK
   81       | Lexpr3 • _LBRACK Lexpr _RBRACK

    _PLUS    сдвиг, и переход в состояние 104
    _MINUS   сдвиг, и переход в состояние 105
    _LBRACK  сдвиг, и переход в состояние 106

    _PLUS     [вывод с использованием правила 78 (Lexpr3)]
    _MINUS    [вывод с использованием правила 78 (Lexpr3)]
    _LBRACK   [вывод с использованием правила 78 (Lexpr3)]
    $default  вывод с использованием правила 78 (Lexpr3)

    shift/reduce conflict on token _PLUS:
       78 Lexpr3: Lexpr3 _PLUS Lexpr3 •
       78 Lexpr3: Lexpr3 • _PLUS Lexpr3
      Example: Lexpr3 _PLUS Lexpr3 • _PLUS Lexpr3
      Shift derivation
        Lexpr3
        ↳ 78: Lexpr3 _PLUS Lexpr3
                           ↳ 78: Lexpr3 • _PLUS Lexpr3
      Reduce derivation
        Lexpr3
        ↳ 78: Lexpr3                      _PLUS Lexpr3
              ↳ 78: Lexpr3 _PLUS Lexpr3 •

    shift/reduce conflict on token _MINUS:
       78 Lexpr3: Lexpr3 _PLUS Lexpr3 •
       79 Lexpr3: Lexpr3 • _MINUS Lexpr3
      Example: Lexpr3 _PLUS Lexpr3 • _MINUS Lexpr3
      Shift derivation
        Lexpr3
        ↳ 78: Lexpr3 _PLUS Lexpr3
                           ↳ 79: Lexpr3 • _MINUS Lexpr3
      Reduce derivation
        Lexpr3
        ↳ 79: Lexpr3                      _MINUS Lexpr3
              ↳ 78: Lexpr3 _PLUS Lexpr3 •

    shift/reduce conflict on token _LBRACK:
       78 Lexpr3: Lexpr3 _PLUS Lexpr3 •
       80 Lexpr3: Lexpr3 • _LBRACK Range _RBRACK
      Example: Lexpr3 _PLUS Lexpr3 • _LBRACK Range _RBRACK
      Shift derivation
        Lexpr3
        ↳ 78: Lexpr3 _PLUS Lexpr3
                           ↳ 80: Lexpr3 • _LBRACK Range _RBRACK
      Reduce derivation
        Lexpr3
        ↳ 80: Lexpr3                      _LBRACK Range _RBRACK
              ↳ 78: Lexpr3 _PLUS Lexpr3 •

    shift/reduce conflict on token _LBRACK:
       78 Lexpr3: Lexpr3 _PLUS Lexpr3 •
       81 Lexpr3: Lexpr3 • _LBRACK Lexpr _RBRACK
      Example: Lexpr3 _PLUS Lexpr3 • _LBRACK Lexpr _RBRACK
      Shift derivation
        Lexpr3
        ↳ 78: Lexpr3 _PLUS Lexpr3
                           ↳ 81: Lexpr3 • _LBRACK Lexpr _RBRACK
      Reduce derivation
        Lexpr3
        ↳ 81: Lexpr3                      _LBRACK Lexpr _RBRACK
              ↳ 78: Lexpr3 _PLUS Lexpr3 •



Состояние 160

   78 Lexpr3: Lexpr3 • _PLUS Lexpr3
   79       | Lexpr3 • _MINUS Lexpr3
   79       | Lexpr3 _MINUS Lexpr3 •  [_BANGEQ, _DAMP, _RPAREN, _PLUS, _COMMA, _MINUS, _DDOT, _SEMI, _LT, _LDARROW, _SYMB_4, _DEQ, _SYMB_3, _GT, _GTEQ, _LBRACK, _SYMB_1, _RBRACK, _DCARET, _KW_for, _DBAR]
   80       | Lexpr3 • _LBRACK Range _RBRACK
   81       | Lexpr3 • _LBRACK Lexpr _RBRACK

    _PLUS    сдвиг, и переход в состояние 104
    _MINUS   сдвиг, и переход в состояние 105
    _LBRACK  сдвиг, и переход в состояние 106

    _PLUS     [вывод с использованием правила 79 (Lexpr3)]
    _MINUS    [вывод с использованием правила 79 (Lexpr3)]
    _LBRACK   [вывод с использованием правила 79 (Lexpr3)]
    $default  вывод с использованием правила 79 (Lexpr3)

    shift/reduce conflict on token _PLUS:
       79 Lexpr3: Lexpr3 _MINUS Lexpr3 •
       78 Lexpr3: Lexpr3 • _PLUS Lexpr3
      Example: Lexpr3 _MINUS Lexpr3 • _PLUS Lexpr3
      Shift derivation
        Lexpr3
        ↳ 79: Lexpr3 _MINUS Lexpr3
                            ↳ 78: Lexpr3 • _PLUS Lexpr3
      Reduce derivation
        Lexpr3
        ↳ 78: Lexpr3                       _PLUS Lexpr3
              ↳ 79: Lexpr3 _MINUS Lexpr3 •

    shift/reduce conflict on token _MINUS:
       79 Lexpr3: Lexpr3 _MINUS Lexpr3 •
       79 Lexpr3: Lexpr3 • _MINUS Lexpr3
      Example: Lexpr3 _MINUS Lexpr3 • _MINUS Lexpr3
      Shift derivation
        Lexpr3
        ↳ 79: Lexpr3 _MINUS Lexpr3
                            ↳ 79: Lexpr3 • _MINUS Lexpr3
      Reduce derivation
        Lexpr3
        ↳ 79: Lexpr3                       _MINUS Lexpr3
              ↳ 79: Lexpr3 _MINUS Lexpr3 •

    shift/reduce conflict on token _LBRACK:
       79 Lexpr3: Lexpr3 _MINUS Lexpr3 •
       80 Lexpr3: Lexpr3 • _LBRACK Range _RBRACK
      Example: Lexpr3 _MINUS Lexpr3 • _LBRACK Range _RBRACK
      Shift derivation
        Lexpr3
        ↳ 79: Lexpr3 _MINUS Lexpr3
                            ↳ 80: Lexpr3 • _LBRACK Range _RBRACK
      Reduce derivation
        Lexpr3
        ↳ 80: Lexpr3                       _LBRACK Range _RBRACK
              ↳ 79: Lexpr3 _MINUS Lexpr3 •

    shift/reduce conflict on token _LBRACK:
       79 Lexpr3: Lexpr3 _MINUS Lexpr3 •
       81 Lexpr3: Lexpr3 • _LBRACK Lexpr _RBRACK
      Example: Lexpr3 _MINUS Lexpr3 • _LBRACK Lexpr _RBRACK
      Shift derivation
        Lexpr3
        ↳ 79: Lexpr3 _MINUS Lexpr3
                            ↳ 81: Lexpr3 • _LBRACK Lexpr _RBRACK
      Reduce derivation
        Lexpr3
        ↳ 81: Lexpr3                       _LBRACK Lexpr _RBRACK
              ↳ 79: Lexpr3 _MINUS Lexpr3 •



Состояние 161

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
   81 Lexpr3: Lexpr3 _LBRACK Lexpr • _RBRACK
   96 LexprOption: Lexpr •  [_DDOT]

    _DAMP    сдвиг, и переход в состояние 98
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _RBRACK  сдвиг, и переход в состояние 212
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 96 (LexprOption)


Состояние 162

   80 Lexpr3: Lexpr3 _LBRACK Range • _RBRACK

    _RBRACK  сдвиг, и переход в состояние 213


Состояние 163

   41 Relation: _BANGEQ •

    $default  вывод с использованием правила 41 (Relation)


Состояние 164

   36 Relation: _LT •

    $default  вывод с использованием правила 36 (Relation)


Состояние 165

   38 Relation: _LDARROW •

    $default  вывод с использованием правила 38 (Relation)


Состояние 166

   40 Relation: _DEQ •

    $default  вывод с использованием правила 40 (Relation)


Состояние 167

   37 Relation: _GT •

    $default  вывод с использованием правила 37 (Relation)


Состояние 168

   39 Relation: _GTEQ •

    $default  вывод с использованием правила 39 (Relation)


Состояние 169

   35 ListLexprRelInner: ListLexprRelInner LexprRelInner •

    $default  вывод с использованием правила 35 (ListLexprRelInner)


Состояние 170

   32 Lexpr1: Lexpr3 ListLexprRelInner Relation • Lexpr2
   33 LexprRelInner: Relation • Lexpr3
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr2          переход в состояние 214
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 215
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 171

   83 Lexpr3: FullIdentifier _LPAREN ListLexpr • _RPAREN

    _RPAREN  сдвиг, и переход в состояние 216


Состояние 172

  108 PostCond: _KW_admit • _KW_ensures
  109         | _KW_admit • _KW_exits
  110         | _KW_admit • _KW_breaks
  111         | _KW_admit • _KW_continues
  112         | _KW_admit • _KW_returns

    _KW_breaks     сдвиг, и переход в состояние 217
    _KW_continues  сдвиг, и переход в состояние 218
    _KW_ensures    сдвиг, и переход в состояние 219
    _KW_exits      сдвиг, и переход в состояние 220
    _KW_returns    сдвиг, и переход в состояние 221


Состояние 173

   16 NESimpleClauses: _KW_assigns • Assigns _SEMI SimpleClauses
   17 Assigns: • Zones
   18        | • ListLexpr _SYMB_1 Zones
   19 Zones: • ListLexpr
   20      | • _SYMB_2
   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   29 ListLexpr: • Lexpr
   30          | • Lexpr _COMMA ListLexpr
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_2    сдвиг, и переход в состояние 63
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Assigns         переход в состояние 222
    Zones           переход в состояние 65
    Lexpr           переход в состояние 66
    ListLexpr       переход в состояние 67
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 174

  100 PostCond: _KW_breaks •

    $default  вывод с использованием правила 100 (PostCond)


Состояние 175

  103 PostCond: _KW_check • _KW_ensures
  104         | _KW_check • _KW_exits
  105         | _KW_check • _KW_breaks
  106         | _KW_check • _KW_continues
  107         | _KW_check • _KW_returns

    _KW_breaks     сдвиг, и переход в состояние 223
    _KW_continues  сдвиг, и переход в состояние 224
    _KW_ensures    сдвиг, и переход в состояние 225
    _KW_exits      сдвиг, и переход в состояние 226
    _KW_returns    сдвиг, и переход в состояние 227


Состояние 176

  101 PostCond: _KW_continues •

    $default  вывод с использованием правила 101 (PostCond)


Состояние 177

   98 PostCond: _KW_ensures •

    $default  вывод с использованием правила 98 (PostCond)


Состояние 178

   99 PostCond: _KW_exits •

    $default  вывод с использованием правила 99 (PostCond)


Состояние 179

  102 PostCond: _KW_returns •

    $default  вывод с использованием правила 102 (PostCond)


Состояние 180

    5 Contract: Requires Terminates Decreases SimpleClauses • Behaviors CompleteOrDisjoint
   21 Behaviors: ε •

    $default  вывод с использованием правила 21 (Behaviors)

    Behaviors  переход в состояние 228


Состояние 181

   14 SimpleClauses: NESimpleClauses •

    $default  вывод с использованием правила 14 (SimpleClauses)


Состояние 182

   15 NESimpleClauses: PostCond • Lexpr _SEMI SimpleClauses
   23 Lexpr: • Lexpr _SYMB_3 Lexpr1
   24      | • Lexpr _SYMB_4 Lexpr1
   25      | • Lexpr _DBAR Lexpr1
   26      | • Lexpr _DAMP Lexpr1
   27      | • Lexpr _DCARET Lexpr1
   28      | • Lexpr1
   31 Lexpr1: • Lexpr2
   32       | • Lexpr3 ListLexprRelInner Relation Lexpr2
   42 Lexpr2: • Lexpr3
   43       | • LexprBinder
   44       | • _BANG LexprBinder
   45 LexprBinder: • _SYMB_16 Binders _SEMI Lexpr
   46            | • _SYMB_17 Binders _SEMI Lexpr
   47            | • _SYMB_18 Binders _SEMI Lexpr
   66 Lexpr3: • _SYMB_24
   67       | • _SYMB_25
   68       | • _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN
   69       | • _SYMB_27
   70       | • _SYMB_28
   71       | • _SYMB_29
   72       | • _SYMB_30
   73       | • _SYMB_31
   74       | • _SYMB_32
   75       | • _INTEGER_
   76       | • _DOUBLE_
   77       | • _STRING_
   78       | • Lexpr3 _PLUS Lexpr3
   79       | • Lexpr3 _MINUS Lexpr3
   80       | • Lexpr3 _LBRACK Range _RBRACK
   81       | • Lexpr3 _LBRACK Lexpr _RBRACK
   82       | • _SYMB_35 _LPAREN ListLexpr _RPAREN
   83       | • FullIdentifier _LPAREN ListLexpr _RPAREN
   84       | • FullIdentifier
   85       | • _SYMB_36
   86       | • _LPAREN Lexpr _RPAREN
   87       | • _LPAREN Range _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _BANG      сдвиг, и переход в состояние 24
    _LPAREN    сдвиг, и переход в состояние 25
    _SYMB_27   сдвиг, и переход в состояние 26
    _SYMB_28   сдвиг, и переход в состояние 27
    _SYMB_17   сдвиг, и переход в состояние 28
    _SYMB_25   сдвиг, и переход в состояние 29
    _SYMB_16   сдвиг, и переход в состояние 30
    _SYMB_18   сдвиг, и переход в состояние 31
    _SYMB_32   сдвиг, и переход в состояние 32
    _SYMB_36   сдвиг, и переход в состояние 33
    _SYMB_29   сдвиг, и переход в состояние 34
    _SYMB_35   сдвиг, и переход в состояние 35
    _SYMB_30   сдвиг, и переход в состояние 36
    _SYMB_24   сдвиг, и переход в состояние 37
    _SYMB_31   сдвиг, и переход в состояние 38
    _SYMB_26   сдвиг, и переход в состояние 39
    _STRING_   сдвиг, и переход в состояние 40
    _INTEGER_  сдвиг, и переход в состояние 41
    _DOUBLE_   сдвиг, и переход в состояние 42
    _IDENT_    сдвиг, и переход в состояние 43

    Lexpr           переход в состояние 229
    Lexpr1          переход в состояние 45
    Lexpr2          переход в состояние 46
    LexprBinder     переход в состояние 47
    Lexpr3          переход в состояние 48
    FullIdentifier  переход в состояние 49
    Identifier      переход в состояние 50


Состояние 183

  157 LoopInvariant: _KW_admit _KW_loop _KW_invariant Lexpr _SEMI •

    $default  вывод с использованием правила 157 (LoopInvariant)


Состояние 184

   10 NERequires: _KW_admit _KW_requires Lexpr _SEMI Requires •

    $default  вывод с использованием правила 10 (NERequires)


Состояние 185

  156 LoopInvariant: _KW_check _KW_loop _KW_invariant Lexpr _SEMI •

    $default  вывод с использованием правила 156 (LoopInvariant)


Состояние 186

    9 NERequires: _KW_check _KW_requires Lexpr _SEMI Requires •

    $default  вывод с использованием правила 9 (NERequires)


Состояние 187

   30 ListLexpr: Lexpr _COMMA ListLexpr •

    $default  вывод с использованием правила 30 (ListLexpr)


Состояние 188

   18 Assigns: ListLexpr _SYMB_1 Zones •

    $default  вывод с использованием правила 18 (Assigns)


Состояние 189

   19 Zones: ListLexpr •

    $default  вывод с использованием правила 19 (Zones)


Состояние 190

  160 Variant: Lexpr _KW_for AnyIdentifier •

    $default  вывод с использованием правила 160 (Variant)


Состояние 191

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
   96 LexprOption: Lexpr •  [_RPAREN, _RBRACK]

    _DAMP    сдвиг, и переход в состояние 98
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 96 (LexprOption)


Состояние 192

   94 Range: LexprOption _DDOT LexprOption •

    $default  вывод с использованием правила 94 (Range)


Состояние 193

  142 TypeSpecSimple: _KW_long _KW_long _KW_int •

    $default  вывод с использованием правила 142 (TypeSpecSimple)


Состояние 194

  136 TypeSpecSimple: _KW_signed _KW_long _KW_int •

    $default  вывод с использованием правила 136 (TypeSpecSimple)


Состояние 195

  140 TypeSpecSimple: _KW_signed _KW_long _KW_long •  [_LPAREN, _STAR, _IDENT_]
  143               | _KW_signed _KW_long _KW_long • _KW_int

    _KW_int  сдвиг, и переход в состояние 230

    $default  вывод с использованием правила 140 (TypeSpecSimple)


Состояние 196

  131 TypeSpecSimple: _KW_signed _KW_short _KW_int •

    $default  вывод с использованием правила 131 (TypeSpecSimple)


Состояние 197

  138 TypeSpecSimple: _KW_unsigned _KW_long _KW_int •

    $default  вывод с использованием правила 138 (TypeSpecSimple)


Состояние 198

  141 TypeSpecSimple: _KW_unsigned _KW_long _KW_long •  [_LPAREN, _STAR, _IDENT_]
  144               | _KW_unsigned _KW_long _KW_long • _KW_int

    _KW_int  сдвиг, и переход в состояние 231

    $default  вывод с использованием правила 141 (TypeSpecSimple)


Состояние 199

  132 TypeSpecSimple: _KW_unsigned _KW_short _KW_int •

    $default  вывод с использованием правила 132 (TypeSpecSimple)


Состояние 200

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
   46 LexprBinder: _SYMB_17 Binders _SEMI Lexpr •  [_DAMP, _RPAREN, _COMMA, _DDOT, _SEMI, _SYMB_4, _SYMB_3, _SYMB_1, _RBRACK, _DCARET, _KW_for, _DBAR]

    _DAMP    сдвиг, и переход в состояние 98
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103

    _DAMP     [вывод с использованием правила 46 (LexprBinder)]
    _SYMB_4   [вывод с использованием правила 46 (LexprBinder)]
    _SYMB_3   [вывод с использованием правила 46 (LexprBinder)]
    _DCARET   [вывод с использованием правила 46 (LexprBinder)]
    _DBAR     [вывод с использованием правила 46 (LexprBinder)]
    $default  вывод с использованием правила 46 (LexprBinder)

    shift/reduce conflict on token _SYMB_3:
       46 LexprBinder: _SYMB_17 Binders _SEMI Lexpr •
       23 Lexpr: Lexpr • _SYMB_3 Lexpr1
      Example: _SYMB_17 Binders _SEMI Lexpr • _SYMB_3 Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 46: _SYMB_17 Binders _SEMI Lexpr
                                                       ↳ 23: Lexpr • _SYMB_3 Lexpr1
      Reduce derivation
        Lexpr
        ↳ 23: Lexpr                                                  _SYMB_3 Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 46: _SYMB_17 Binders _SEMI Lexpr •

    shift/reduce conflict on token _SYMB_4:
       46 LexprBinder: _SYMB_17 Binders _SEMI Lexpr •
       24 Lexpr: Lexpr • _SYMB_4 Lexpr1
      Example: _SYMB_17 Binders _SEMI Lexpr • _SYMB_4 Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 46: _SYMB_17 Binders _SEMI Lexpr
                                                       ↳ 24: Lexpr • _SYMB_4 Lexpr1
      Reduce derivation
        Lexpr
        ↳ 24: Lexpr                                                  _SYMB_4 Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 46: _SYMB_17 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DBAR:
       46 LexprBinder: _SYMB_17 Binders _SEMI Lexpr •
       25 Lexpr: Lexpr • _DBAR Lexpr1
      Example: _SYMB_17 Binders _SEMI Lexpr • _DBAR Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 46: _SYMB_17 Binders _SEMI Lexpr
                                                       ↳ 25: Lexpr • _DBAR Lexpr1
      Reduce derivation
        Lexpr
        ↳ 25: Lexpr                                                  _DBAR Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 46: _SYMB_17 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DAMP:
       46 LexprBinder: _SYMB_17 Binders _SEMI Lexpr •
       26 Lexpr: Lexpr • _DAMP Lexpr1
      Example: _SYMB_17 Binders _SEMI Lexpr • _DAMP Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 46: _SYMB_17 Binders _SEMI Lexpr
                                                       ↳ 26: Lexpr • _DAMP Lexpr1
      Reduce derivation
        Lexpr
        ↳ 26: Lexpr                                                  _DAMP Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 46: _SYMB_17 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DCARET:
       46 LexprBinder: _SYMB_17 Binders _SEMI Lexpr •
       27 Lexpr: Lexpr • _DCARET Lexpr1
      Example: _SYMB_17 Binders _SEMI Lexpr • _DCARET Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 46: _SYMB_17 Binders _SEMI Lexpr
                                                       ↳ 27: Lexpr • _DCARET Lexpr1
      Reduce derivation
        Lexpr
        ↳ 27: Lexpr                                                  _DCARET Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 46: _SYMB_17 Binders _SEMI Lexpr •



Состояние 201

   62 VarSpec1: _LPAREN VarSpec • _RPAREN

    _RPAREN  сдвиг, и переход в состояние 232


Состояние 202

   48 Binders: TypeSpecOFTYPENAME VarSpec ListBindersReentrance •  [_SEMI]
   51 BindersReentrance: • _COMMA TypeSpecOFTYPENAME VarSpec
   52                  | • _COMMA VarSpec
   54 ListBindersReentrance: ListBindersReentrance • BindersReentrance

    _COMMA  сдвиг, и переход в состояние 233

    $default  вывод с использованием правила 48 (Binders)

    BindersReentrance  переход в состояние 234


Состояние 203

   59 ListStars: Stars ListStars •

    $default  вывод с использованием правила 59 (ListStars)


Состояние 204

   56 VarSpec: ListStars VarSpec1 •  [_RPAREN, _COMMA, _SEMI]
   61 VarSpec1: VarSpec1 • _LBRACK ArraySize _RBRACK

    _LBRACK  сдвиг, и переход в состояние 205

    $default  вывод с использованием правила 56 (VarSpec)


Состояние 205

   61 VarSpec1: VarSpec1 _LBRACK • ArraySize _RBRACK
   63 ArraySize: • _INTEGER_
   64          | • FullIdentifier
   65          | ε •  [_RBRACK]
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _INTEGER_  сдвиг, и переход в состояние 235
    _IDENT_    сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 65 (ArraySize)

    ArraySize       переход в состояние 236
    FullIdentifier  переход в состояние 237
    Identifier      переход в состояние 50


Состояние 206

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
   45 LexprBinder: _SYMB_16 Binders _SEMI Lexpr •  [_DAMP, _RPAREN, _COMMA, _DDOT, _SEMI, _SYMB_4, _SYMB_3, _SYMB_1, _RBRACK, _DCARET, _KW_for, _DBAR]

    _DAMP    сдвиг, и переход в состояние 98
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103

    _DAMP     [вывод с использованием правила 45 (LexprBinder)]
    _SYMB_4   [вывод с использованием правила 45 (LexprBinder)]
    _SYMB_3   [вывод с использованием правила 45 (LexprBinder)]
    _DCARET   [вывод с использованием правила 45 (LexprBinder)]
    _DBAR     [вывод с использованием правила 45 (LexprBinder)]
    $default  вывод с использованием правила 45 (LexprBinder)

    shift/reduce conflict on token _SYMB_3:
       45 LexprBinder: _SYMB_16 Binders _SEMI Lexpr •
       23 Lexpr: Lexpr • _SYMB_3 Lexpr1
      Example: _SYMB_16 Binders _SEMI Lexpr • _SYMB_3 Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 45: _SYMB_16 Binders _SEMI Lexpr
                                                       ↳ 23: Lexpr • _SYMB_3 Lexpr1
      Reduce derivation
        Lexpr
        ↳ 23: Lexpr                                                  _SYMB_3 Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 45: _SYMB_16 Binders _SEMI Lexpr •

    shift/reduce conflict on token _SYMB_4:
       45 LexprBinder: _SYMB_16 Binders _SEMI Lexpr •
       24 Lexpr: Lexpr • _SYMB_4 Lexpr1
      Example: _SYMB_16 Binders _SEMI Lexpr • _SYMB_4 Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 45: _SYMB_16 Binders _SEMI Lexpr
                                                       ↳ 24: Lexpr • _SYMB_4 Lexpr1
      Reduce derivation
        Lexpr
        ↳ 24: Lexpr                                                  _SYMB_4 Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 45: _SYMB_16 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DBAR:
       45 LexprBinder: _SYMB_16 Binders _SEMI Lexpr •
       25 Lexpr: Lexpr • _DBAR Lexpr1
      Example: _SYMB_16 Binders _SEMI Lexpr • _DBAR Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 45: _SYMB_16 Binders _SEMI Lexpr
                                                       ↳ 25: Lexpr • _DBAR Lexpr1
      Reduce derivation
        Lexpr
        ↳ 25: Lexpr                                                  _DBAR Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 45: _SYMB_16 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DAMP:
       45 LexprBinder: _SYMB_16 Binders _SEMI Lexpr •
       26 Lexpr: Lexpr • _DAMP Lexpr1
      Example: _SYMB_16 Binders _SEMI Lexpr • _DAMP Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 45: _SYMB_16 Binders _SEMI Lexpr
                                                       ↳ 26: Lexpr • _DAMP Lexpr1
      Reduce derivation
        Lexpr
        ↳ 26: Lexpr                                                  _DAMP Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 45: _SYMB_16 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DCARET:
       45 LexprBinder: _SYMB_16 Binders _SEMI Lexpr •
       27 Lexpr: Lexpr • _DCARET Lexpr1
      Example: _SYMB_16 Binders _SEMI Lexpr • _DCARET Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 45: _SYMB_16 Binders _SEMI Lexpr
                                                       ↳ 27: Lexpr • _DCARET Lexpr1
      Reduce derivation
        Lexpr
        ↳ 27: Lexpr                                                  _DCARET Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 45: _SYMB_16 Binders _SEMI Lexpr •



Состояние 207

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
   47 LexprBinder: _SYMB_18 Binders _SEMI Lexpr •  [_DAMP, _RPAREN, _COMMA, _DDOT, _SEMI, _SYMB_4, _SYMB_3, _SYMB_1, _RBRACK, _DCARET, _KW_for, _DBAR]

    _DAMP    сдвиг, и переход в состояние 98
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103

    _DAMP     [вывод с использованием правила 47 (LexprBinder)]
    _SYMB_4   [вывод с использованием правила 47 (LexprBinder)]
    _SYMB_3   [вывод с использованием правила 47 (LexprBinder)]
    _DCARET   [вывод с использованием правила 47 (LexprBinder)]
    _DBAR     [вывод с использованием правила 47 (LexprBinder)]
    $default  вывод с использованием правила 47 (LexprBinder)

    shift/reduce conflict on token _SYMB_3:
       47 LexprBinder: _SYMB_18 Binders _SEMI Lexpr •
       23 Lexpr: Lexpr • _SYMB_3 Lexpr1
      Example: _SYMB_18 Binders _SEMI Lexpr • _SYMB_3 Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 47: _SYMB_18 Binders _SEMI Lexpr
                                                       ↳ 23: Lexpr • _SYMB_3 Lexpr1
      Reduce derivation
        Lexpr
        ↳ 23: Lexpr                                                  _SYMB_3 Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 47: _SYMB_18 Binders _SEMI Lexpr •

    shift/reduce conflict on token _SYMB_4:
       47 LexprBinder: _SYMB_18 Binders _SEMI Lexpr •
       24 Lexpr: Lexpr • _SYMB_4 Lexpr1
      Example: _SYMB_18 Binders _SEMI Lexpr • _SYMB_4 Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 47: _SYMB_18 Binders _SEMI Lexpr
                                                       ↳ 24: Lexpr • _SYMB_4 Lexpr1
      Reduce derivation
        Lexpr
        ↳ 24: Lexpr                                                  _SYMB_4 Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 47: _SYMB_18 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DBAR:
       47 LexprBinder: _SYMB_18 Binders _SEMI Lexpr •
       25 Lexpr: Lexpr • _DBAR Lexpr1
      Example: _SYMB_18 Binders _SEMI Lexpr • _DBAR Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 47: _SYMB_18 Binders _SEMI Lexpr
                                                       ↳ 25: Lexpr • _DBAR Lexpr1
      Reduce derivation
        Lexpr
        ↳ 25: Lexpr                                                  _DBAR Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 47: _SYMB_18 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DAMP:
       47 LexprBinder: _SYMB_18 Binders _SEMI Lexpr •
       26 Lexpr: Lexpr • _DAMP Lexpr1
      Example: _SYMB_18 Binders _SEMI Lexpr • _DAMP Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 47: _SYMB_18 Binders _SEMI Lexpr
                                                       ↳ 26: Lexpr • _DAMP Lexpr1
      Reduce derivation
        Lexpr
        ↳ 26: Lexpr                                                  _DAMP Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 47: _SYMB_18 Binders _SEMI Lexpr •

    shift/reduce conflict on token _DCARET:
       47 LexprBinder: _SYMB_18 Binders _SEMI Lexpr •
       27 Lexpr: Lexpr • _DCARET Lexpr1
      Example: _SYMB_18 Binders _SEMI Lexpr • _DCARET Lexpr1
      Shift derivation
        Lexpr
        ↳ 28: Lexpr1
              ↳ 31: Lexpr2
                    ↳ 43: LexprBinder
                          ↳ 47: _SYMB_18 Binders _SEMI Lexpr
                                                       ↳ 27: Lexpr • _DCARET Lexpr1
      Reduce derivation
        Lexpr
        ↳ 27: Lexpr                                                  _DCARET Lexpr1
              ↳ 28: Lexpr1
                    ↳ 31: Lexpr2
                          ↳ 43: LexprBinder
                                ↳ 47: _SYMB_18 Binders _SEMI Lexpr •



Состояние 208

   82 Lexpr3: _SYMB_35 _LPAREN ListLexpr _RPAREN •

    $default  вывод с использованием правила 82 (Lexpr3)


Состояние 209

   91 LabelName: • AnyIdentifier
   92 ListLabelName: • LabelName
   93              | • LabelName _COMMA ListLabelName
   93              | LabelName _COMMA • ListLabelName
   97 AnyIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _IDENT_  сдвиг, и переход в состояние 43

    LabelName      переход в состояние 146
    ListLabelName  переход в состояние 238
    AnyIdentifier  переход в состояние 148
    Identifier     переход в состояние 149


Состояние 210

   90 OptLabelList: _LBRACE ListLabelName _RBRACE •

    $default  вывод с использованием правила 90 (OptLabelList)


Состояние 211

   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1
   68 Lexpr3: _SYMB_26 OptLabel1 _LPAREN Lexpr • _RPAREN

    _DAMP    сдвиг, и переход в состояние 98
    _RPAREN  сдвиг, и переход в состояние 239
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103


Состояние 212

   81 Lexpr3: Lexpr3 _LBRACK Lexpr _RBRACK •

    $default  вывод с использованием правила 81 (Lexpr3)


Состояние 213

   80 Lexpr3: Lexpr3 _LBRACK Range _RBRACK •

    $default  вывод с использованием правила 80 (Lexpr3)


Состояние 214

   32 Lexpr1: Lexpr3 ListLexprRelInner Relation Lexpr2 •

    $default  вывод с использованием правила 32 (Lexpr1)


Состояние 215

   33 LexprRelInner: Relation Lexpr3 •  [_BANGEQ, _LT, _LDARROW, _DEQ, _GT, _GTEQ]
   42 Lexpr2: Lexpr3 •  [_DAMP, _RPAREN, _COMMA, _DDOT, _SEMI, _SYMB_4, _SYMB_3, _SYMB_1, _RBRACK, _DCARET, _KW_for, _DBAR]
   78 Lexpr3: Lexpr3 • _PLUS Lexpr3
   79       | Lexpr3 • _MINUS Lexpr3
   80       | Lexpr3 • _LBRACK Range _RBRACK
   81       | Lexpr3 • _LBRACK Lexpr _RBRACK

    _PLUS    сдвиг, и переход в состояние 104
    _MINUS   сдвиг, и переход в состояние 105
    _LBRACK  сдвиг, и переход в состояние 106

    _BANGEQ   вывод с использованием правила 33 (LexprRelInner)
    _LT       вывод с использованием правила 33 (LexprRelInner)
    _LDARROW  вывод с использованием правила 33 (LexprRelInner)
    _DEQ      вывод с использованием правила 33 (LexprRelInner)
    _GT       вывод с использованием правила 33 (LexprRelInner)
    _GTEQ     вывод с использованием правила 33 (LexprRelInner)
    $default  вывод с использованием правила 42 (Lexpr2)


Состояние 216

   83 Lexpr3: FullIdentifier _LPAREN ListLexpr _RPAREN •

    $default  вывод с использованием правила 83 (Lexpr3)


Состояние 217

  110 PostCond: _KW_admit _KW_breaks •

    $default  вывод с использованием правила 110 (PostCond)


Состояние 218

  111 PostCond: _KW_admit _KW_continues •

    $default  вывод с использованием правила 111 (PostCond)


Состояние 219

  108 PostCond: _KW_admit _KW_ensures •

    $default  вывод с использованием правила 108 (PostCond)


Состояние 220

  109 PostCond: _KW_admit _KW_exits •

    $default  вывод с использованием правила 109 (PostCond)


Состояние 221

  112 PostCond: _KW_admit _KW_returns •

    $default  вывод с использованием правила 112 (PostCond)


Состояние 222

   16 NESimpleClauses: _KW_assigns Assigns • _SEMI SimpleClauses

    _SEMI  сдвиг, и переход в состояние 240


Состояние 223

  105 PostCond: _KW_check _KW_breaks •

    $default  вывод с использованием правила 105 (PostCond)


Состояние 224

  106 PostCond: _KW_check _KW_continues •

    $default  вывод с использованием правила 106 (PostCond)


Состояние 225

  103 PostCond: _KW_check _KW_ensures •

    $default  вывод с использованием правила 103 (PostCond)


Состояние 226

  104 PostCond: _KW_check _KW_exits •

    $default  вывод с использованием правила 104 (PostCond)


Состояние 227

  107 PostCond: _KW_check _KW_returns •

    $default  вывод с использованием правила 107 (PostCond)


Состояние 228

    5 Contract: Requires Terminates Decreases SimpleClauses Behaviors • CompleteOrDisjoint
   22 CompleteOrDisjoint: ε •

    $default  вывод с использованием правила 22 (CompleteOrDisjoint)

    CompleteOrDisjoint  переход в состояние 241


Состояние 229

   15 NESimpleClauses: PostCond Lexpr • _SEMI SimpleClauses
   23 Lexpr: Lexpr • _SYMB_3 Lexpr1
   24      | Lexpr • _SYMB_4 Lexpr1
   25      | Lexpr • _DBAR Lexpr1
   26      | Lexpr • _DAMP Lexpr1
   27      | Lexpr • _DCARET Lexpr1

    _DAMP    сдвиг, и переход в состояние 98
    _SEMI    сдвиг, и переход в состояние 242
    _SYMB_4  сдвиг, и переход в состояние 100
    _SYMB_3  сдвиг, и переход в состояние 101
    _DCARET  сдвиг, и переход в состояние 102
    _DBAR    сдвиг, и переход в состояние 103


Состояние 230

  143 TypeSpecSimple: _KW_signed _KW_long _KW_long _KW_int •

    $default  вывод с использованием правила 143 (TypeSpecSimple)


Состояние 231

  144 TypeSpecSimple: _KW_unsigned _KW_long _KW_long _KW_int •

    $default  вывод с использованием правила 144 (TypeSpecSimple)


Состояние 232

   62 VarSpec1: _LPAREN VarSpec _RPAREN •

    $default  вывод с использованием правила 62 (VarSpec1)


Состояние 233

   49 TypeSpecOFTYPENAME: • _IDENT_
   50                   | • TypeSpecSimple
   51 BindersReentrance: _COMMA • TypeSpecOFTYPENAME VarSpec
   52                  | _COMMA • VarSpec
   55 VarSpec: • VarSpec1
   56        | • ListStars VarSpec1
   57 Stars: • _STAR
   58 ListStars: • Stars
   59          | • Stars ListStars
   60 VarSpec1: • FullIdentifier
   61         | • VarSpec1 _LBRACK ArraySize _RBRACK
   62         | • _LPAREN VarSpec _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_
  115 TypeSpecSimple: • _KW_integer
  116               | • _KW_real
  117               | • _KW_boolean
  118               | • _KW_void
  119               | • _SYMB_40
  120               | • _KW_char
  121               | • _KW_signed _KW_char
  122               | • _KW_unsigned _KW_char
  123               | • _KW_int
  124               | • _KW_signed _KW_int
  125               | • _KW_unsigned _KW_int
  126               | • _KW_unsigned
  127               | • _KW_short
  128               | • _KW_signed _KW_short
  129               | • _KW_unsigned _KW_short
  130               | • _KW_short _KW_int
  131               | • _KW_signed _KW_short _KW_int
  132               | • _KW_unsigned _KW_short _KW_int
  133               | • _KW_long
  134               | • _KW_signed _KW_long
  135               | • _KW_unsigned _KW_long
  136               | • _KW_signed _KW_long _KW_int
  137               | • _KW_long _KW_int
  138               | • _KW_unsigned _KW_long _KW_int
  139               | • _KW_long _KW_long
  140               | • _KW_signed _KW_long _KW_long
  141               | • _KW_unsigned _KW_long _KW_long
  142               | • _KW_long _KW_long _KW_int
  143               | • _KW_signed _KW_long _KW_long _KW_int
  144               | • _KW_unsigned _KW_long _KW_long _KW_int
  145               | • _KW_float
  146               | • _KW_double
  147               | • _KW_long _KW_double

    _LPAREN       сдвиг, и переход в состояние 136
    _STAR         сдвиг, и переход в состояние 137
    _SYMB_40      сдвиг, и переход в состояние 75
    _KW_boolean   сдвиг, и переход в состояние 76
    _KW_char      сдвиг, и переход в состояние 77
    _KW_double    сдвиг, и переход в состояние 78
    _KW_float     сдвиг, и переход в состояние 79
    _KW_int       сдвиг, и переход в состояние 80
    _KW_integer   сдвиг, и переход в состояние 81
    _KW_long      сдвиг, и переход в состояние 82
    _KW_real      сдвиг, и переход в состояние 83
    _KW_short     сдвиг, и переход в состояние 84
    _KW_signed    сдвиг, и переход в состояние 85
    _KW_unsigned  сдвиг, и переход в состояние 86
    _KW_void      сдвиг, и переход в состояние 87
    _IDENT_       сдвиг, и переход в состояние 243

    TypeSpecOFTYPENAME  переход в состояние 244
    VarSpec             переход в состояние 245
    Stars               переход в состояние 139
    ListStars           переход в состояние 140
    VarSpec1            переход в состояние 141
    FullIdentifier      переход в состояние 142
    Identifier          переход в состояние 50
    TypeSpecSimple      переход в состояние 91


Состояние 234

   54 ListBindersReentrance: ListBindersReentrance BindersReentrance •

    $default  вывод с использованием правила 54 (ListBindersReentrance)


Состояние 235

   63 ArraySize: _INTEGER_ •

    $default  вывод с использованием правила 63 (ArraySize)


Состояние 236

   61 VarSpec1: VarSpec1 _LBRACK ArraySize • _RBRACK

    _RBRACK  сдвиг, и переход в состояние 246


Состояние 237

   64 ArraySize: FullIdentifier •

    $default  вывод с использованием правила 64 (ArraySize)


Состояние 238

   93 ListLabelName: LabelName _COMMA ListLabelName •

    $default  вывод с использованием правила 93 (ListLabelName)


Состояние 239

   68 Lexpr3: _SYMB_26 OptLabel1 _LPAREN Lexpr _RPAREN •

    $default  вывод с использованием правила 68 (Lexpr3)


Состояние 240

   13 SimpleClauses: ε •  [$end]
   14              | • NESimpleClauses
   15 NESimpleClauses: • PostCond Lexpr _SEMI SimpleClauses
   16                | • _KW_assigns Assigns _SEMI SimpleClauses
   16                | _KW_assigns Assigns _SEMI • SimpleClauses
   98 PostCond: • _KW_ensures
   99         | • _KW_exits
  100         | • _KW_breaks
  101         | • _KW_continues
  102         | • _KW_returns
  103         | • _KW_check _KW_ensures
  104         | • _KW_check _KW_exits
  105         | • _KW_check _KW_breaks
  106         | • _KW_check _KW_continues
  107         | • _KW_check _KW_returns
  108         | • _KW_admit _KW_ensures
  109         | • _KW_admit _KW_exits
  110         | • _KW_admit _KW_breaks
  111         | • _KW_admit _KW_continues
  112         | • _KW_admit _KW_returns

    _KW_admit      сдвиг, и переход в состояние 172
    _KW_assigns    сдвиг, и переход в состояние 173
    _KW_breaks     сдвиг, и переход в состояние 174
    _KW_check      сдвиг, и переход в состояние 175
    _KW_continues  сдвиг, и переход в состояние 176
    _KW_ensures    сдвиг, и переход в состояние 177
    _KW_exits      сдвиг, и переход в состояние 178
    _KW_returns    сдвиг, и переход в состояние 179

    $default  вывод с использованием правила 13 (SimpleClauses)

    SimpleClauses    переход в состояние 247
    NESimpleClauses  переход в состояние 181
    PostCond         переход в состояние 182


Состояние 241

    5 Contract: Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint •

    $default  вывод с использованием правила 5 (Contract)


Состояние 242

   13 SimpleClauses: ε •  [$end]
   14              | • NESimpleClauses
   15 NESimpleClauses: • PostCond Lexpr _SEMI SimpleClauses
   15                | PostCond Lexpr _SEMI • SimpleClauses
   16                | • _KW_assigns Assigns _SEMI SimpleClauses
   98 PostCond: • _KW_ensures
   99         | • _KW_exits
  100         | • _KW_breaks
  101         | • _KW_continues
  102         | • _KW_returns
  103         | • _KW_check _KW_ensures
  104         | • _KW_check _KW_exits
  105         | • _KW_check _KW_breaks
  106         | • _KW_check _KW_continues
  107         | • _KW_check _KW_returns
  108         | • _KW_admit _KW_ensures
  109         | • _KW_admit _KW_exits
  110         | • _KW_admit _KW_breaks
  111         | • _KW_admit _KW_continues
  112         | • _KW_admit _KW_returns

    _KW_admit      сдвиг, и переход в состояние 172
    _KW_assigns    сдвиг, и переход в состояние 173
    _KW_breaks     сдвиг, и переход в состояние 174
    _KW_check      сдвиг, и переход в состояние 175
    _KW_continues  сдвиг, и переход в состояние 176
    _KW_ensures    сдвиг, и переход в состояние 177
    _KW_exits      сдвиг, и переход в состояние 178
    _KW_returns    сдвиг, и переход в состояние 179

    $default  вывод с использованием правила 13 (SimpleClauses)

    SimpleClauses    переход в состояние 248
    NESimpleClauses  переход в состояние 181
    PostCond         переход в состояние 182


Состояние 243

   49 TypeSpecOFTYPENAME: _IDENT_ •  [_LPAREN, _STAR, _IDENT_]
  114 Identifier: _IDENT_ •  [_COMMA, _SEMI, _LBRACK]

    _COMMA    вывод с использованием правила 114 (Identifier)
    _SEMI     вывод с использованием правила 114 (Identifier)
    _LBRACK   вывод с использованием правила 114 (Identifier)
    $default  вывод с использованием правила 49 (TypeSpecOFTYPENAME)


Состояние 244

   51 BindersReentrance: _COMMA TypeSpecOFTYPENAME • VarSpec
   55 VarSpec: • VarSpec1
   56        | • ListStars VarSpec1
   57 Stars: • _STAR
   58 ListStars: • Stars
   59          | • Stars ListStars
   60 VarSpec1: • FullIdentifier
   61         | • VarSpec1 _LBRACK ArraySize _RBRACK
   62         | • _LPAREN VarSpec _RPAREN
  113 FullIdentifier: • Identifier
  114 Identifier: • _IDENT_

    _LPAREN  сдвиг, и переход в состояние 136
    _STAR    сдвиг, и переход в состояние 137
    _IDENT_  сдвиг, и переход в состояние 43

    VarSpec         переход в состояние 249
    Stars           переход в состояние 139
    ListStars       переход в состояние 140
    VarSpec1        переход в состояние 141
    FullIdentifier  переход в состояние 142
    Identifier      переход в состояние 50


Состояние 245

   52 BindersReentrance: _COMMA VarSpec •

    $default  вывод с использованием правила 52 (BindersReentrance)


Состояние 246

   61 VarSpec1: VarSpec1 _LBRACK ArraySize _RBRACK •

    $default  вывод с использованием правила 61 (VarSpec1)


Состояние 247

   16 NESimpleClauses: _KW_assigns Assigns _SEMI SimpleClauses •

    $default  вывод с использованием правила 16 (NESimpleClauses)


Состояние 248

   15 NESimpleClauses: PostCond Lexpr _SEMI SimpleClauses •

    $default  вывод с использованием правила 15 (NESimpleClauses)


Состояние 249

   51 BindersReentrance: _COMMA TypeSpecOFTYPENAME VarSpec •

    $default  вывод с использованием правила 51 (BindersReentrance)
