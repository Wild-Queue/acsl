-- File generated by the BNF Converter (bnfc 2.9.4.1).

-- Templates for pattern matching on abstract syntax

{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module Acsl.AcslGrammar.Skel where

import Prelude (($), Either(..), String, (++), Show, show)
import qualified Acsl.AcslGrammar.Abs

type Err = Either String
type Result = Err String

failure :: Show a => a -> Result
failure x = Left $ "Undefined case: " ++ show x

transIdent :: Acsl.AcslGrammar.Abs.Ident -> Result
transIdent x = case x of
  Acsl.AcslGrammar.Abs.Ident string -> failure x

transProgram :: Acsl.AcslGrammar.Abs.Program -> Result
transProgram x = case x of
  Acsl.AcslGrammar.Abs.AnnotProgram annot -> failure x
  Acsl.AcslGrammar.Abs.AnnotationProgram logicptreeannot -> failure x

transAnnot :: Acsl.AcslGrammar.Abs.Annot -> Result
transAnnot x = case x of
  Acsl.AcslGrammar.Abs.CodeAnnot codeannot -> failure x

transCode_Annot :: Acsl.AcslGrammar.Abs.Code_Annot -> Result
transCode_Annot x = case x of
  Acsl.AcslGrammar.Abs.CodeAnnotContract contract -> failure x

transContract :: Acsl.AcslGrammar.Abs.Contract -> Result
transContract x = case x of
  Acsl.AcslGrammar.Abs.SimpleContract requires terminates decreases simpleclauses behaviors completeordisjoint -> failure x
  Acsl.AcslGrammar.Abs.ClausesRequiresContract requires terminates decreases nesimpleclauses -> failure x
  Acsl.AcslGrammar.Abs.ClausesTerminatesContract requires terminates decreases nesimpleclauses -> failure x
  Acsl.AcslGrammar.Abs.ClausesDecreasesContract requires terminates decreases nesimpleclauses -> failure x

transRequires :: Acsl.AcslGrammar.Abs.Requires -> Result
transRequires x = case x of
  Acsl.AcslGrammar.Abs.NoRequires -> failure x
  Acsl.AcslGrammar.Abs.SomeRequires nerequires -> failure x

transNERequires :: Acsl.AcslGrammar.Abs.NERequires -> Result
transNERequires x = case x of
  Acsl.AcslGrammar.Abs.SimpleRequires lexpr requires -> failure x
  Acsl.AcslGrammar.Abs.CheckRequires lexpr requires -> failure x
  Acsl.AcslGrammar.Abs.AdimtRequires lexpr requires -> failure x

transTerminates :: Acsl.AcslGrammar.Abs.Terminates -> Result
transTerminates x = case x of
  Acsl.AcslGrammar.Abs.NoTerminate -> failure x

transDecreases :: Acsl.AcslGrammar.Abs.Decreases -> Result
transDecreases x = case x of
  Acsl.AcslGrammar.Abs.NoDecreases -> failure x

transSimpleClauses :: Acsl.AcslGrammar.Abs.SimpleClauses -> Result
transSimpleClauses x = case x of
  Acsl.AcslGrammar.Abs.NoSimpleClauses -> failure x
  Acsl.AcslGrammar.Abs.SomeSimpleClauses nesimpleclauses -> failure x

transNESimpleClauses :: Acsl.AcslGrammar.Abs.NESimpleClauses -> Result
transNESimpleClauses x = case x of
  Acsl.AcslGrammar.Abs.PostCondSimpleClauses postcond lexpr simpleclauses -> failure x
  Acsl.AcslGrammar.Abs.AssignsSimpleClauses assigns simpleclauses -> failure x

transAssigns :: Acsl.AcslGrammar.Abs.Assigns -> Result
transAssigns x = case x of
  Acsl.AcslGrammar.Abs.AssignZone zones -> failure x
  Acsl.AcslGrammar.Abs.AssignZoneFromZone lexprs zones -> failure x

transZones :: Acsl.AcslGrammar.Abs.Zones -> Result
transZones x = case x of
  Acsl.AcslGrammar.Abs.SomeZone lexprs -> failure x
  Acsl.AcslGrammar.Abs.NoZone -> failure x

transBehaviors :: Acsl.AcslGrammar.Abs.Behaviors -> Result
transBehaviors x = case x of
  Acsl.AcslGrammar.Abs.NoBehaviors -> failure x

transCompleteOrDisjoint :: Acsl.AcslGrammar.Abs.CompleteOrDisjoint -> Result
transCompleteOrDisjoint x = case x of
  Acsl.AcslGrammar.Abs.NoComplDisj -> failure x

transLexpr :: Acsl.AcslGrammar.Abs.Lexpr -> Result
transLexpr x = case x of
  Acsl.AcslGrammar.Abs.ImplLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.IffLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.OrLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.AndLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.HatHatLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.AmpLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.PipeLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.HatLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.BimpliesLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.BiffLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.InLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.TernaryLexpr lexpr1 lexpr2 lexpr3 -> failure x
  Acsl.AcslGrammar.Abs.RelationLexpr lexpr1 lexprrelinners relation lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.BinderLexpr lexprbinder -> failure x
  Acsl.AcslGrammar.Abs.NotBinderLexpr lexprbinder -> failure x
  Acsl.AcslGrammar.Abs.TrueLexpr -> failure x
  Acsl.AcslGrammar.Abs.FalseLexpr -> failure x
  Acsl.AcslGrammar.Abs.PointerLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.ValidLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.ValidReadLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.ValidFuncLexpr lexpr -> failure x
  Acsl.AcslGrammar.Abs.ValidIndxLexpr optlabel lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.ValidRangeLexpr optlabel lexpr1 lexpr2 lexpr3 -> failure x
  Acsl.AcslGrammar.Abs.InitializedLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.DanglingLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.FreshLexpr optlabel lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.BaseAddrLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.BlockLengthLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.OffsetLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.AllocableLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.FreeableLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.AllocationLexpr optlabel lexpr -> failure x
  Acsl.AcslGrammar.Abs.AutomaticLexpr -> failure x
  Acsl.AcslGrammar.Abs.DynamicLexpr -> failure x
  Acsl.AcslGrammar.Abs.RegisterLexpr -> failure x
  Acsl.AcslGrammar.Abs.StaticLexpr -> failure x
  Acsl.AcslGrammar.Abs.UnallocatedLexpr -> failure x
  Acsl.AcslGrammar.Abs.NullLexpr -> failure x
  Acsl.AcslGrammar.Abs.LexprIntConst integer -> failure x
  Acsl.AcslGrammar.Abs.LexprFloatConst double -> failure x
  Acsl.AcslGrammar.Abs.LexprStringConst string -> failure x
  Acsl.AcslGrammar.Abs.AddLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.SubtrLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.MultLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.DivLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.ModLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.SquaresRangeLexpr lexpr range -> failure x
  Acsl.AcslGrammar.Abs.SquaresLexpr lexpr1 lexpr2 -> failure x
  Acsl.AcslGrammar.Abs.MinusLexpr lexpr -> failure x
  Acsl.AcslGrammar.Abs.PlusLexpr lexpr -> failure x
  Acsl.AcslGrammar.Abs.TildeLexpr lexpr -> failure x
  Acsl.AcslGrammar.Abs.StarLexpr lexpr -> failure x
  Acsl.AcslGrammar.Abs.AmpUnaryLexpr lexpr -> failure x
  Acsl.AcslGrammar.Abs.SizeOfLexpr lexpr -> failure x
  Acsl.AcslGrammar.Abs.OldLexpr lexpr -> failure x
  Acsl.AcslGrammar.Abs.AtLexpr lexpr labelname -> failure x
  Acsl.AcslGrammar.Abs.ResultLexpr -> failure x
  Acsl.AcslGrammar.Abs.SeparatedLexpr lexprs -> failure x
  Acsl.AcslGrammar.Abs.FullIdParenLexpr fullidentifier lexprs -> failure x
  Acsl.AcslGrammar.Abs.FullId fullidentifier -> failure x
  Acsl.AcslGrammar.Abs.PiLexpr -> failure x
  Acsl.AcslGrammar.Abs.ParenRangeLexpr range -> failure x

transLexprRelInner :: Acsl.AcslGrammar.Abs.LexprRelInner -> Result
transLexprRelInner x = case x of
  Acsl.AcslGrammar.Abs.RelInnerLexpr relation lexpr -> failure x

transRelation :: Acsl.AcslGrammar.Abs.Relation -> Result
transRelation x = case x of
  Acsl.AcslGrammar.Abs.LessRel -> failure x
  Acsl.AcslGrammar.Abs.GreaterRel -> failure x
  Acsl.AcslGrammar.Abs.LessEqRel -> failure x
  Acsl.AcslGrammar.Abs.GreaterEqRel -> failure x
  Acsl.AcslGrammar.Abs.EqRel -> failure x
  Acsl.AcslGrammar.Abs.NotEqRel -> failure x

transLexprBinder :: Acsl.AcslGrammar.Abs.LexprBinder -> Result
transLexprBinder x = case x of
  Acsl.AcslGrammar.Abs.ForallBinderLexpr binders lexpr -> failure x
  Acsl.AcslGrammar.Abs.ExistBinderLexpr binders lexpr -> failure x
  Acsl.AcslGrammar.Abs.LambdaBinderLexpr binders lexpr -> failure x

transBinders :: Acsl.AcslGrammar.Abs.Binders -> Result
transBinders x = case x of
  Acsl.AcslGrammar.Abs.TheBinders typespecoftypename varspec bindersreentrances -> failure x

transTypeSpecOFTYPENAME :: Acsl.AcslGrammar.Abs.TypeSpecOFTYPENAME -> Result
transTypeSpecOFTYPENAME x = case x of
  Acsl.AcslGrammar.Abs.TypeSpecTYPENAME ident -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleFromTypenameTypeSpec typespecsimple -> failure x

transBindersReentrance :: Acsl.AcslGrammar.Abs.BindersReentrance -> Result
transBindersReentrance x = case x of
  Acsl.AcslGrammar.Abs.BindersReentranceDeclSpec typespecoftypename varspec -> failure x
  Acsl.AcslGrammar.Abs.BindersReentranceVarSpec varspec -> failure x

transVarSpec :: Acsl.AcslGrammar.Abs.VarSpec -> Result
transVarSpec x = case x of
  Acsl.AcslGrammar.Abs.StartVarSpec starss varspec -> failure x
  Acsl.AcslGrammar.Abs.SimpleSpec fullidentifier -> failure x
  Acsl.AcslGrammar.Abs.ArraySpec varspec arraysize -> failure x

transStars :: Acsl.AcslGrammar.Abs.Stars -> Result
transStars x = case x of
  Acsl.AcslGrammar.Abs.Star -> failure x

transArraySize :: Acsl.AcslGrammar.Abs.ArraySize -> Result
transArraySize x = case x of
  Acsl.AcslGrammar.Abs.IntConstArraySize integer -> failure x
  Acsl.AcslGrammar.Abs.SomeArraySize fullidentifier -> failure x
  Acsl.AcslGrammar.Abs.NoSize -> failure x

transOptLabel :: Acsl.AcslGrammar.Abs.OptLabel -> Result
transOptLabel x = case x of
  Acsl.AcslGrammar.Abs.OptLabelOne optlabellist -> failure x
  Acsl.AcslGrammar.Abs.OptLabelTwo optlabellist -> failure x

transOptLabelList :: Acsl.AcslGrammar.Abs.OptLabelList -> Result
transOptLabelList x = case x of
  Acsl.AcslGrammar.Abs.NoLableList -> failure x
  Acsl.AcslGrammar.Abs.LableList labelnames -> failure x

transLabelName :: Acsl.AcslGrammar.Abs.LabelName -> Result
transLabelName x = case x of
  Acsl.AcslGrammar.Abs.LableName anyidentifier -> failure x

transRange :: Acsl.AcslGrammar.Abs.Range -> Result
transRange x = case x of
  Acsl.AcslGrammar.Abs.LexprRange lexproption1 lexproption2 -> failure x

transLexprOption :: Acsl.AcslGrammar.Abs.LexprOption -> Result
transLexprOption x = case x of
  Acsl.AcslGrammar.Abs.NoLexprOption -> failure x
  Acsl.AcslGrammar.Abs.SomeLexprOption lexpr -> failure x

transAnyIdentifier :: Acsl.AcslGrammar.Abs.AnyIdentifier -> Result
transAnyIdentifier x = case x of
  Acsl.AcslGrammar.Abs.SimpleIdentifierAny identifier -> failure x

transPostCond :: Acsl.AcslGrammar.Abs.PostCond -> Result
transPostCond x = case x of
  Acsl.AcslGrammar.Abs.EnsuresKeyWord -> failure x
  Acsl.AcslGrammar.Abs.ExitsKeyWord -> failure x
  Acsl.AcslGrammar.Abs.BreaksKeyWord -> failure x
  Acsl.AcslGrammar.Abs.ContinuesKeyWord -> failure x
  Acsl.AcslGrammar.Abs.ReturnsKeyWord -> failure x
  Acsl.AcslGrammar.Abs.CheckEnsuresKeyWord -> failure x
  Acsl.AcslGrammar.Abs.CheckExitsKeyWord -> failure x
  Acsl.AcslGrammar.Abs.CheckBreaksKeyWord -> failure x
  Acsl.AcslGrammar.Abs.CheckContinuesKeyWord -> failure x
  Acsl.AcslGrammar.Abs.CheckReturnsKeyWord -> failure x
  Acsl.AcslGrammar.Abs.AdmitEnsuresKeyWord -> failure x
  Acsl.AcslGrammar.Abs.AdmitExitsKeyWord -> failure x
  Acsl.AcslGrammar.Abs.AdmitBreaksKeyWord -> failure x
  Acsl.AcslGrammar.Abs.AdmitContinuesKeyWord -> failure x
  Acsl.AcslGrammar.Abs.AdmitReturnsKeyWord -> failure x

transFullIdentifier :: Acsl.AcslGrammar.Abs.FullIdentifier -> Result
transFullIdentifier x = case x of
  Acsl.AcslGrammar.Abs.SimpleIdentifierFull identifier -> failure x
  Acsl.AcslGrammar.Abs.AdmitKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.AllocatesKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.AssertKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.AssignsKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.AssumesKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.AtKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.AxiomKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.AxiomaticKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.BehaviorKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.BreaksKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.CheckKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.CompleteKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.ContinuesKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.ContractKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.DecreasesKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.DisjointKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.EnsuresKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.ExitsKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.FreesKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.FunctionKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.GlobalKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.ImpactKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.InductiveKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.IncludeKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.InvariantKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.LemmaKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.LetKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.LogicKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.LoopKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.ModelKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.ModuleKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.PragmaKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.PredicateKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.RequiresKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.ReturnsKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.SliceKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.TerminatesKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.TypeKeyWordFullIdent -> failure x
  Acsl.AcslGrammar.Abs.VariantKeyWordFullIdent -> failure x

transIdentifier :: Acsl.AcslGrammar.Abs.Identifier -> Result
transIdentifier x = case x of
  Acsl.AcslGrammar.Abs.IdentifierIdent ident -> failure x
  Acsl.AcslGrammar.Abs.BehaviorsKeyWord -> failure x
  Acsl.AcslGrammar.Abs.LabelKeyWord -> failure x
  Acsl.AcslGrammar.Abs.ReadsKeyWord -> failure x
  Acsl.AcslGrammar.Abs.WritesKeyWord -> failure x

transTypeSpecSimple :: Acsl.AcslGrammar.Abs.TypeSpecSimple -> Result
transTypeSpecSimple x = case x of
  Acsl.AcslGrammar.Abs.TypeSpecSimpleIntegerKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleRealKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleBooleanKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleVoidKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleBoolKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleCharKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleSignedCharKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedCharKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleSignedIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleShortKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleSignedShortKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedShortKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleShortIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleSignedShortIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedShortIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleLongKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleSignedLongKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedLongKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleSignedLongIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleLongIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedLongIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleLongLongKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleSignedLongLongKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedLongLongKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleLongLongIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleSignedLongLongIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleUnsignedLongLongIntKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleFloatKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleDoubleKeyWord -> failure x
  Acsl.AcslGrammar.Abs.TypeSpecSimpleLongDoubleKeyWord -> failure x

transLogicPTreeAnnot :: Acsl.AcslGrammar.Abs.LogicPTreeAnnot -> Result
transLogicPTreeAnnot x = case x of
  Acsl.AcslGrammar.Abs.AnAnnotation annotation -> failure x

transAnnotation :: Acsl.AcslGrammar.Abs.Annotation -> Result
transAnnotation x = case x of
  Acsl.AcslGrammar.Abs.LoopAnnotation loopannotstack -> failure x

transLoopAnnotStack :: Acsl.AcslGrammar.Abs.LoopAnnotStack -> Result
transLoopAnnotStack x = case x of
  Acsl.AcslGrammar.Abs.LoopAnnotStackInvariant loopinvariant loopannotopt -> failure x
  Acsl.AcslGrammar.Abs.LoopAnnotStackEffects loopeffects loopannotopt -> failure x
  Acsl.AcslGrammar.Abs.LoopAnnotStackAllocation loopallocation loopannotopt -> failure x
  Acsl.AcslGrammar.Abs.LoopAnnotStackVariant loopvariant loopannotopt -> failure x

transLoopAnnotOpt :: Acsl.AcslGrammar.Abs.LoopAnnotOpt -> Result
transLoopAnnotOpt x = case x of
  Acsl.AcslGrammar.Abs.NoLoopAnnot -> failure x
  Acsl.AcslGrammar.Abs.SomeLoopAnnot loopannotstack -> failure x

transLoopInvariant :: Acsl.AcslGrammar.Abs.LoopInvariant -> Result
transLoopInvariant x = case x of
  Acsl.AcslGrammar.Abs.SimpleLoopInvariant lexpr -> failure x
  Acsl.AcslGrammar.Abs.CheckLoopInvariant lexpr -> failure x
  Acsl.AcslGrammar.Abs.AdmitLoopInvariant lexpr -> failure x

transLoopAllocation :: Acsl.AcslGrammar.Abs.LoopAllocation -> Result
transLoopAllocation x = case x of
  Acsl.AcslGrammar.Abs.SimpleLoopAllocation allocation -> failure x

transAllocation :: Acsl.AcslGrammar.Abs.Allocation -> Result
transAllocation x = case x of
  Acsl.AcslGrammar.Abs.AllocatesZones zones -> failure x
  Acsl.AcslGrammar.Abs.FreesZones zones -> failure x

transLoopVariant :: Acsl.AcslGrammar.Abs.LoopVariant -> Result
transLoopVariant x = case x of
  Acsl.AcslGrammar.Abs.SimpleLoopVariant variant -> failure x

transLoopEffects :: Acsl.AcslGrammar.Abs.LoopEffects -> Result
transLoopEffects x = case x of
  Acsl.AcslGrammar.Abs.LoopAssigns assigns -> failure x

transVariant :: Acsl.AcslGrammar.Abs.Variant -> Result
transVariant x = case x of
  Acsl.AcslGrammar.Abs.ForVariant lexpr anyidentifier -> failure x
  Acsl.AcslGrammar.Abs.LexprVariant lexpr -> failure x
