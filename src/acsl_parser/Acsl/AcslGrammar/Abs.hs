-- File generated by the BNF Converter (bnfc 2.9.4.1).

{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language acsl_grammar.

module Acsl.AcslGrammar.Abs where

import Prelude (Double, Integer, String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

data Program
    = AnnotProgram Annot | AnnotationProgram LogicPTreeAnnot
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Annot = CodeAnnot Code_Annot
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Code_Annot = CodeAnnotContract Contract
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Contract
    = SimpleContract Requires Terminates Decreases SimpleClauses Behaviors CompleteOrDisjoint
    | ClausesRequiresContract Requires Terminates Decreases NESimpleClauses
    | ClausesTerminatesContract Requires Terminates Decreases NESimpleClauses
    | ClausesDecreasesContract Requires Terminates Decreases NESimpleClauses
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Requires = NoRequires | SomeRequires NERequires
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data NERequires
    = SimpleRequires Lexpr Requires
    | CheckRequires Lexpr Requires
    | AdimtRequires Lexpr Requires
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Terminates = NoTerminate
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Decreases = NoDecreases
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SimpleClauses
    = NoSimpleClauses | SomeSimpleClauses NESimpleClauses
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data NESimpleClauses
    = PostCondSimpleClauses PostCond Lexpr SimpleClauses
    | AssignsSimpleClauses Assigns SimpleClauses
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Assigns = AssignZone Zones | AssignZoneFromZone [Lexpr] Zones
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Zones = SomeZone [Lexpr] | NoZone
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Behaviors = NoBehaviors
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data CompleteOrDisjoint = NoComplDisj
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Lexpr
    = ImplLexpr Lexpr Lexpr
    | IffLexpr Lexpr Lexpr
    | OrLexpr Lexpr Lexpr
    | AndLexpr Lexpr Lexpr
    | HatHatLexpr Lexpr Lexpr
    | AmpLexpr Lexpr Lexpr
    | PipeLexpr Lexpr Lexpr
    | HatLexpr Lexpr Lexpr
    | BimpliesLexpr Lexpr Lexpr
    | BiffLexpr Lexpr Lexpr
    | InLexpr Lexpr Lexpr
    | TernaryLexpr Lexpr Lexpr Lexpr
    | RelationLexpr Lexpr [LexprRelInner] Relation Lexpr
    | BinderLexpr LexprBinder
    | NotBinderLexpr LexprBinder
    | TrueLexpr
    | FalseLexpr
    | PointerLexpr OptLabel Lexpr
    | ValidLexpr OptLabel Lexpr
    | ValidReadLexpr OptLabel Lexpr
    | ValidFuncLexpr Lexpr
    | ValidIndxLexpr OptLabel Lexpr Lexpr
    | ValidRangeLexpr OptLabel Lexpr Lexpr Lexpr
    | InitializedLexpr OptLabel Lexpr
    | DanglingLexpr OptLabel Lexpr
    | FreshLexpr OptLabel Lexpr Lexpr
    | BaseAddrLexpr OptLabel Lexpr
    | BlockLengthLexpr OptLabel Lexpr
    | OffsetLexpr OptLabel Lexpr
    | AllocableLexpr OptLabel Lexpr
    | FreeableLexpr OptLabel Lexpr
    | AllocationLexpr OptLabel Lexpr
    | AutomaticLexpr
    | DynamicLexpr
    | RegisterLexpr
    | StaticLexpr
    | UnallocatedLexpr
    | NullLexpr
    | LexprIntConst Integer
    | LexprFloatConst Double
    | LexprStringConst String
    | AddLexpr Lexpr Lexpr
    | SubtrLexpr Lexpr Lexpr
    | MultLexpr Lexpr Lexpr
    | DivLexpr Lexpr Lexpr
    | ModLexpr Lexpr Lexpr
    | SquaresRangeLexpr Lexpr Range
    | SquaresLexpr Lexpr Lexpr
    | MinusLexpr Lexpr
    | PlusLexpr Lexpr
    | TildeLexpr Lexpr
    | StarLexpr Lexpr
    | AmpUnaryLexpr Lexpr
    | SizeOfLexpr Lexpr
    | OldLexpr Lexpr
    | AtLexpr Lexpr LabelName
    | ResultLexpr
    | SeparatedLexpr [Lexpr]
    | FullIdParenLexpr FullIdentifier [Lexpr]
    | FullId FullIdentifier
    | PiLexpr
    | ParenRangeLexpr Range
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LexprRelInner = RelInnerLexpr Relation Lexpr
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Relation
    = LessRel
    | GreaterRel
    | LessEqRel
    | GreaterEqRel
    | EqRel
    | NotEqRel
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LexprBinder
    = ForallBinderLexpr Binders Lexpr
    | ExistBinderLexpr Binders Lexpr
    | LambdaBinderLexpr Binders Lexpr
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Binders
    = TheBinders TypeSpecOFTYPENAME VarSpec [BindersReentrance]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data TypeSpecOFTYPENAME
    = TypeSpecTYPENAME Ident
    | TypeSpecSimpleFromTypenameTypeSpec TypeSpecSimple
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data BindersReentrance
    = BindersReentranceDeclSpec TypeSpecOFTYPENAME VarSpec
    | BindersReentranceVarSpec VarSpec
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data VarSpec
    = StartVarSpec [Stars] VarSpec
    | SimpleSpec FullIdentifier
    | ArraySpec VarSpec ArraySize
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Stars = Star
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data ArraySize
    = IntConstArraySize Integer | SomeArraySize FullIdentifier | NoSize
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data OptLabel = OptLabelOne OptLabelList | OptLabelTwo OptLabelList
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data OptLabelList = NoLableList | LableList [LabelName]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LabelName = LableName AnyIdentifier
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Range = LexprRange LexprOption LexprOption
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LexprOption = NoLexprOption | SomeLexprOption Lexpr
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data AnyIdentifier = SimpleIdentifierAny Identifier
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data PostCond
    = EnsuresKeyWord
    | ExitsKeyWord
    | BreaksKeyWord
    | ContinuesKeyWord
    | ReturnsKeyWord
    | CheckEnsuresKeyWord
    | CheckExitsKeyWord
    | CheckBreaksKeyWord
    | CheckContinuesKeyWord
    | CheckReturnsKeyWord
    | AdmitEnsuresKeyWord
    | AdmitExitsKeyWord
    | AdmitBreaksKeyWord
    | AdmitContinuesKeyWord
    | AdmitReturnsKeyWord
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data FullIdentifier
    = SimpleIdentifierFull Identifier
    | AdmitKeyWordFullIdent
    | AllocatesKeyWordFullIdent
    | AssertKeyWordFullIdent
    | AssignsKeyWordFullIdent
    | AssumesKeyWordFullIdent
    | AtKeyWordFullIdent
    | AxiomKeyWordFullIdent
    | AxiomaticKeyWordFullIdent
    | BehaviorKeyWordFullIdent
    | BreaksKeyWordFullIdent
    | CheckKeyWordFullIdent
    | CompleteKeyWordFullIdent
    | ContinuesKeyWordFullIdent
    | ContractKeyWordFullIdent
    | DecreasesKeyWordFullIdent
    | DisjointKeyWordFullIdent
    | EnsuresKeyWordFullIdent
    | ExitsKeyWordFullIdent
    | FreesKeyWordFullIdent
    | FunctionKeyWordFullIdent
    | GlobalKeyWordFullIdent
    | ImpactKeyWordFullIdent
    | InductiveKeyWordFullIdent
    | IncludeKeyWordFullIdent
    | InvariantKeyWordFullIdent
    | LemmaKeyWordFullIdent
    | LetKeyWordFullIdent
    | LogicKeyWordFullIdent
    | LoopKeyWordFullIdent
    | ModelKeyWordFullIdent
    | ModuleKeyWordFullIdent
    | PragmaKeyWordFullIdent
    | PredicateKeyWordFullIdent
    | RequiresKeyWordFullIdent
    | ReturnsKeyWordFullIdent
    | SliceKeyWordFullIdent
    | TerminatesKeyWordFullIdent
    | TypeKeyWordFullIdent
    | VariantKeyWordFullIdent
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Identifier
    = IdentifierIdent Ident
    | BehaviorsKeyWord
    | LabelKeyWord
    | ReadsKeyWord
    | WritesKeyWord
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data TypeSpecSimple
    = TypeSpecSimpleIntegerKeyWord
    | TypeSpecSimpleRealKeyWord
    | TypeSpecSimpleBooleanKeyWord
    | TypeSpecSimpleVoidKeyWord
    | TypeSpecSimpleBoolKeyWord
    | TypeSpecSimpleCharKeyWord
    | TypeSpecSimpleSignedCharKeyWord
    | TypeSpecSimpleUnsignedCharKeyWord
    | TypeSpecSimpleIntKeyWord
    | TypeSpecSimpleSignedIntKeyWord
    | TypeSpecSimpleUnsignedIntKeyWord
    | TypeSpecSimpleUnsignedKeyWord
    | TypeSpecSimpleShortKeyWord
    | TypeSpecSimpleSignedShortKeyWord
    | TypeSpecSimpleUnsignedShortKeyWord
    | TypeSpecSimpleShortIntKeyWord
    | TypeSpecSimpleSignedShortIntKeyWord
    | TypeSpecSimpleUnsignedShortIntKeyWord
    | TypeSpecSimpleLongKeyWord
    | TypeSpecSimpleSignedLongKeyWord
    | TypeSpecSimpleUnsignedLongKeyWord
    | TypeSpecSimpleSignedLongIntKeyWord
    | TypeSpecSimpleLongIntKeyWord
    | TypeSpecSimpleUnsignedLongIntKeyWord
    | TypeSpecSimpleLongLongKeyWord
    | TypeSpecSimpleSignedLongLongKeyWord
    | TypeSpecSimpleUnsignedLongLongKeyWord
    | TypeSpecSimpleLongLongIntKeyWord
    | TypeSpecSimpleSignedLongLongIntKeyWord
    | TypeSpecSimpleUnsignedLongLongIntKeyWord
    | TypeSpecSimpleFloatKeyWord
    | TypeSpecSimpleDoubleKeyWord
    | TypeSpecSimpleLongDoubleKeyWord
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LogicPTreeAnnot = AnAnnotation Annotation
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Annotation = LoopAnnotation LoopAnnotStack
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LoopAnnotStack
    = LoopAnnotStackInvariant LoopInvariant LoopAnnotOpt
    | LoopAnnotStackEffects LoopEffects LoopAnnotOpt
    | LoopAnnotStackAllocation LoopAllocation LoopAnnotOpt
    | LoopAnnotStackVariant LoopVariant LoopAnnotOpt
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LoopAnnotOpt = NoLoopAnnot | SomeLoopAnnot LoopAnnotStack
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LoopInvariant
    = SimpleLoopInvariant Lexpr
    | CheckLoopInvariant Lexpr
    | AdmitLoopInvariant Lexpr
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LoopAllocation = SimpleLoopAllocation Allocation
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Allocation = AllocatesZones Zones | FreesZones Zones
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LoopVariant = SimpleLoopVariant Variant
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LoopEffects = LoopAssigns Assigns
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Variant = ForVariant Lexpr AnyIdentifier | LexprVariant Lexpr
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype Ident = Ident String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

